{"version":3,"file":"src_app_custom-elements_events_events_module_ts.a02b42c37019a29b.js","mappings":"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","names":["eventsPath","CONTENT_URL_PREFIX","EventsService","constructor","http","logger","this","events","getEvents","eventsSource","get","pipe","catchError","error","Error","message","of","connectable","connector","AsyncSubject","resetOnDisconnect","connect","t","i0","i1","i2","core","Yz7","factory","Éµfac","EventsComponent_ng_container_4_ng_container_1_Template","_r3","_c0","ctx_r1","upcomingEvents","event_r8","name","linkUrl","EventsComponent_ng_template_9_tr_8_span_2_Template","EventsComponent_ng_template_9_tr_8_a_3_Template","date","start","EventsComponent_ng_template_9_tr_8_Template","events_r6","EventsComponent","eventsService","pastEvents","ngOnInit","subscribe","filter","event","isInThePast","sort","l","r","Xpm","selectors","decls","vars","consts","template","rf","ctx","EventsComponent_div_3_Template","EventsComponent_ng_container_4_Template","EventsComponent_ng_container_8_Template","EventsComponent_ng_template_9_Template","length","Date","getTime","now","EventsModule","customElementComponent","oAB","cJS","imports","CommonModule"],"sourceRoot":"webpack:///","sources":["./src/app/custom-elements/events/events.service.ts","./src/app/custom-elements/events/events.component.html","./src/app/custom-elements/events/events.component.ts","./src/app/custom-elements/events/events.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {AsyncSubject, connectable, Observable, of} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\nimport {AngularEvent} from './events.component';\nimport {CONTENT_URL_PREFIX} from 'app/documents/document.service';\nimport {Logger} from 'app/shared/logger.service';\n\nconst eventsPath = CONTENT_URL_PREFIX + 'events.json';\n\n@Injectable()\nexport class EventsService {\n  events: Observable<AngularEvent[]>;\n\n  constructor(private http: HttpClient, private logger: Logger) {\n    this.events = this.getEvents();\n  }\n\n  private getEvents() {\n    const eventsSource = this.http.get<any>(eventsPath).pipe(\n      catchError((error) => {\n        this.logger.error(new Error(`${eventsPath} request failed: ${error.message}`));\n        return of([]);\n      })\n    );\n    const events = connectable(eventsSource, {\n      connector: () => new AsyncSubject(),\n      resetOnDisconnect: false,\n    });\n    events.connect();\n    return events;\n  }\n}\n","<h2>Where we'll be presenting:</h2>\n<ng-container [ngSwitch]=\"!!upcomingEvents.length\">\n  <div *ngSwitchCase=\"false\">\n    <p>We don't have any upcoming speaking engagements at the moment.</p>\n    <p>\n      Until something comes up, make sure you check our <a href=\"https://www.youtube.com/angular\">YouTube channel</a>\n      and follow us on <a href=\"https://twitter.com/angular\">social media</a>.\n    </p>\n    <p>\n      If you want us to be part of your event reach out on <a href=\"mailto:devrel@angular.io\">devrel@angular.io</a>!\n    </p>\n  </div>\n  <ng-container *ngSwitchDefault>\n    <ng-container *ngTemplateOutlet=\"eventsTable; context: {$implicit: upcomingEvents}\"></ng-container>\n  </ng-container>\n</ng-container>\n\n<br />\n\n<h2>Where we already presented:</h2>\n<ng-container *ngTemplateOutlet=\"eventsTable; context: {$implicit: pastEvents}\"></ng-container>\n\n<ng-template #eventsTable let-events>\n  <table class=\"is-full-width\">\n    <thead>\n      <tr>\n        <th>Event</th>\n        <th>Start date</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let event of events\">\n        <th [ngSwitch]=\"!!event.linkUrl\">\n          <span *ngSwitchCase=\"false\">{{ event.name }}</span>\n          <a *ngSwitchDefault href=\"{{ event.linkUrl }}\">{{ event.name }}</a>\n        </th>\n        <td>{{ event.date.start }}</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\nimport { EventsService } from './events.service';\n\nconst DAY = 24 * 60 * 60 * 1000;\n\nexport interface AngularEvent {\n  name: string;\n  linkUrl?: string;\n  date: {\n    start: `${number}-${number}-${number}`; // Date string in the format: `YYYY-MM-DD`\n  };\n}\n\n@Component({\n  selector: 'aio-events',\n  templateUrl: 'events.component.html'\n})\nexport class EventsComponent implements OnInit {\n\n  pastEvents: AngularEvent[] = [];\n  upcomingEvents: AngularEvent[] = [];\n\n  constructor(private eventsService: EventsService) { }\n\n  ngOnInit() {\n    this.eventsService.events.subscribe(events => {\n      this.pastEvents = events\n          .filter(event => isInThePast(event))\n          .sort((l: AngularEvent, r: AngularEvent) => (l.date.start < r.date.start) ? 1 : -1);\n\n      this.upcomingEvents = events\n          .filter(event => !isInThePast(event))\n          .sort((l: AngularEvent, r: AngularEvent) => (l.date.start < r.date.start) ? -1 : 1);\n    });\n  }\n}\n\nfunction isInThePast(event: AngularEvent): boolean {\n  return new Date(event.date.start).getTime() < Date.now() - DAY;\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EventsComponent } from './events.component';\nimport { EventsService } from './events.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ EventsComponent ],\n  providers: [ EventsService ],\n})\nexport class EventsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = EventsComponent;\n}\n"],"x_google_ignoreList":[]}