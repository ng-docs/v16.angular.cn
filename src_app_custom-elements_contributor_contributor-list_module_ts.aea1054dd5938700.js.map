{"version":3,"file":"src_app_custom-elements_contributor_contributor-list_module_ts.aea1054dd5938700.js","mappings":"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","names":["contributorsPath","CONTENT_URL_PREFIX","knownGroups","ContributorService","constructor","http","this","contributors","getContributors","get","pipe","map","contribs","contribMap","Object","keys","forEach","key","contributor","groups","group","push","cmap","order","indexOf","name","length","sort","compareContributors","compareGroups","connectableContributors","connectable","connector","AsyncSubject","resetOnDisconnect","connect","t","i0","i1","core","Yz7","factory","Éµfac","l","r","toUpperCase","ctx_r0","person","pictureBase","picture","$event","stopPropagation","ctx_r1","twitter","ctx_r2","website","ContributorComponent","Xpm","selectors","inputs","decls","vars","consts","template","rf","ctx","ContributorComponent_div_1_Template","ContributorComponent_a_7_Template","ContributorComponent_a_8_Template","bio","name_r2","_r4","$implicit","ctx_r3","selectGroup","selectedGroup","ContributorListComponent_section_2_aio_contributor_2_Template","ContributorListComponent","contributorService","locationService","ngOnInit","groupName","search","subscribe","grps","groupNames","g","toLowerCase","find","setSearch","i2","ContributorListComponent_button_1_Template","ContributorListComponent_section_2_Template","ContributorListModule","customElementComponent","oAB","cJS","imports","CommonModule","MatIconModule"],"sourceRoot":"webpack:///","sources":["./src/app/custom-elements/contributor/contributor.service.ts","./src/app/custom-elements/contributor/contributor.component.ts","./src/app/custom-elements/contributor/contributor-list.component.ts","./src/app/custom-elements/contributor/contributor-list.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {AsyncSubject, connectable, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {Contributor, ContributorGroup} from './contributors.model';\n\n// TODO(andrewjs): Look into changing this so that we don't import the service just to get the const\nimport {CONTENT_URL_PREFIX} from 'app/documents/document.service';\n\nconst contributorsPath = CONTENT_URL_PREFIX + 'contributors.json';\nconst knownGroups = ['Angular', 'Collaborators', 'GDE'];\n\n@Injectable()\nexport class ContributorService {\n  contributors: Observable<ContributorGroup[]>;\n\n  constructor(private http: HttpClient) {\n    this.contributors = this.getContributors();\n  }\n\n  private getContributors() {\n    const contributors = this.http.get<{[key: string]: Contributor}>(contributorsPath).pipe(\n      // Create group map\n      map((contribs) => {\n        const contribMap: {[name: string]: Contributor[]} = {};\n        Object.keys(contribs).forEach((key) => {\n          const contributor = contribs[key];\n          contributor.groups.forEach((group) => {\n            const contribGroup = contribMap[group] || (contribMap[group] = []);\n            contribGroup.push(contributor);\n          });\n        });\n\n        return contribMap;\n      }),\n\n      // Flatten group map into sorted group array of sorted contributors\n      map((cmap) =>\n        Object.keys(cmap)\n          .map((key) => {\n            const order = knownGroups.indexOf(key);\n            return {\n              name: key,\n              order: order === -1 ? knownGroups.length : order,\n              contributors: cmap[key].sort(compareContributors),\n            };\n          })\n          .sort(compareGroups)\n      )\n    );\n\n    const connectableContributors = connectable(contributors, {\n      connector: () => new AsyncSubject(),\n      resetOnDisconnect: false,\n    });\n    connectableContributors.connect();\n    return connectableContributors;\n  }\n}\n\nfunction compareContributors(l: Contributor, r: Contributor) {\n  return l.name.toUpperCase() > r.name.toUpperCase() ? 1 : -1;\n}\n\nfunction compareGroups(l: ContributorGroup, r: ContributorGroup) {\n  return l.order === r.order ? (l.name > r.name ? 1 : -1) : l.order > r.order ? 1 : -1;\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Contributor } from './contributors.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\n@Component({\n  selector: 'aio-contributor',\n  template: `\n    <section class=\"contributor-card\" [class.no-image]=\"!person.picture\"\n      attr.aria-labelledby=\"{{person.name}}-section-heading\">\n      <div *ngIf=\"person.picture\" class=\"contributor-image-wrapper\">\n      <img [src]=\"pictureBase+person.picture\" alt=\"{{person.name}}\" class=\"contributor-image\">\n      </div>\n      <h3 id=\"{{person.name}}-section-heading\" class=\"contributor-title\">{{person.name}}</h3>\n      <p class=\"contributor-bio\">{{person.bio}}</p>\n      <div class=\"contributor-social-links\">\n        <a *ngIf=\"person.twitter\" mat-icon-button class=\"info-item icon contributor-social\"\n            attr.aria-label=\"twitter of {{person.name}}\"\n            href=\"https://twitter.com/{{person.twitter}}\"\n            target=\"_blank\" (click)=\"$event.stopPropagation()\">\n            <mat-icon svgIcon=\"logos:twitter\"></mat-icon>\n        </a>\n        <a *ngIf=\"person.website\" mat-icon-button class=\"info-item icon\"\n           attr.aria-label=\"website of {{person.name}}\"\n           href=\"{{person.website}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\n           <mat-icon class=\"link-icon\">link</mat-icon>\n        </a>\n      </div>\n    </section>\n  `\n})\nexport class ContributorComponent {\n  @Input() person: Contributor;\n  pictureBase = CONTENT_URL_PREFIX + 'images/bios/';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ContributorGroup } from './contributors.model';\nimport { ContributorService } from './contributor.service';\nimport { LocationService } from 'app/shared/location.service';\n\n@Component({\n  selector: 'aio-contributor-list',\n  template: `\n    <div class=\"flex-center group-buttons\">\n      <button *ngFor=\"let name of groupNames\"\n          class=\"button mat-button filter-button\"\n          [class.selected]=\"name === selectedGroup.name\"\n          (click)=\"selectGroup(name)\">{{name}}</button>\n    </div>\n    <section *ngIf=\"selectedGroup\" class=\"grid-fluid\">\n      <div class=\"contributor-group\">\n        <aio-contributor *ngFor=\"let person of selectedGroup.contributors\"\n            [person]=\"person\"></aio-contributor>\n      </div>\n    </section>\n  `,\n})\nexport class ContributorListComponent implements OnInit {\n  private groups: ContributorGroup[];\n  groupNames: string[];\n  selectedGroup: ContributorGroup;\n\n  constructor(\n    private contributorService: ContributorService,\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    const groupName =  this.locationService.search().group || '';\n    // no need to unsubscribe because `contributors` completes\n    this.contributorService.contributors\n      .subscribe(grps => {\n        this.groups = grps;\n        this.groupNames = grps.map(g => g.name);\n        this.selectGroup(groupName);\n      });\n  }\n\n  selectGroup(name: string) {\n    name = name.toLowerCase();\n    this.selectedGroup = this.groups.find(g => g.name.toLowerCase() === name) || this.groups[0];\n    this.locationService.setSearch('', {group: this.selectedGroup.name});\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ContributorListComponent } from './contributor-list.component';\nimport { ContributorService } from './contributor.service';\nimport { ContributorComponent } from './contributor.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatIconModule ],\n  declarations: [ ContributorListComponent, ContributorComponent ],\n  providers: [ ContributorService ]\n})\nexport class ContributorListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ContributorListComponent;\n}\n"],"x_google_ignoreList":[]}