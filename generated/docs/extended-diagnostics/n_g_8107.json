{"id":"extended-diagnostics/NG8107","title":"NG8107: Optional chain not nullable\n\n可选链不能是可空值","contents":"<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/extended-diagnostics/NG8107.md?message=docs(...)%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n<div class=\"content\">\n\n  <h1 id=\"ng8107-optional-chain-not-nullable可选链不能是可空值\">NG8107: Optional chain not nullable\n\n可选链不能是可空值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8107#ng8107-optional-chain-not-nullable可选链不能是可空值\"><i class=\"material-icons\">link</i></a></h1>\n\n  <div class=\"diagnostic-description\">\n    <h2 translation-result=\"on\" id=\"说明\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8107#说明\"><i class=\"material-icons\">link</i></a></h2>\n    <h2 translation-origin=\"off\" id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8107#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p translation-result=\"on\">此诊断会检测可选链操作符（<code>.?</code>）的左侧有没有在其 Angular 模板中包括 <code>null</code> 或 <code>undefined</code> 类型。</p><p translation-origin=\"off\">This diagnostic detects when the left side of an optional chain operation (<code>.?</code>) does not include <code>null</code> or <code>undefined</code> in its type in Angular templates.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  template: `<div>{{ foo?.bar }}</div>`,\n  // …\n})\nclass MyComponent {\n  // `foo` is declared as an object which *cannot* be `null` or `undefined`.\n  foo: { bar: string} = { bar: 'bar'};\n}\n\n</code-example>\n<h2 id=\"what-should-i-do-instead\" translation-result=\"on\">我该怎么办？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8107#what-should-i-do-instead\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What should I do instead?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8107#what-should-i-do-instead\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">更新模板和声明的类型以同步两者。仔细检查输入的类型，并确认它是否真是可空的。</p><p translation-origin=\"off\">Update the template and declared type to be in sync. Double-check the type of the input and confirm whether it is actually expected to be nullable.</p>\n\n<p translation-result=\"on\">如果输入应该是可空的，请在其类型中添加 <code>null</code> 或 <code>undefined</code> 以表明这一点。</p><p translation-origin=\"off\">If the input should be nullable, add <code>null</code> or <code>undefined</code> to its type to indicate this.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  // If `foo` is nullish, `bar` won't be evaluated and the express will return the nullish value (`null` or `undefined`).  \n  template: `<div>{{ foo?.bar }}</div>`,\n  // …\n})\nclass MyComponent {\n  foo: { bar: string} | null = { bar: 'bar'};\n}\n\n</code-example>\n<p translation-result=\"on\">如果输入不应该为空，则删除 <code>?</code> 操作符。</p><p translation-origin=\"off\">If the input should not be nullable, delete the <code>?</code> operator.</p>\n\n<code-example format=\"typescript\" language=\"typescript\">\n\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  // Template always displays `bar` as `foo` is guaranteed to never be `null` or `undefined`\n  template: `<div>{{ foo.bar }}</div>`,\n  // …\n})\nclass MyComponent {\n  foo: { bar: string} = { bar: 'bar'};\n}\n\n</code-example>\n<h2 id=\"what-if-i-cant-avoid-this\" translation-result=\"on\">如果我无法避免这种情况怎么办？<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8107#what-if-i-cant-avoid-this\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">What if I can't avoid this?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics/NG8107#what-if-i-cant-avoid-this\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">可以通过编辑项目的 <code>tsconfig.json</code> 文件来禁用此诊断：</p><p translation-origin=\"off\">This diagnostic can be disabled by editing the project's <code>tsconfig.json</code> file:</p>\n\n<code-example format=\"json\" language=\"json\">\n\n{\n  \"angularCompilerOptions\": {\n    \"extendedDiagnostics\": {\n      \"checks\": {\n        \"optionalChainNotNullable\": \"suppress\"\n      }\n    }\n  }\n}\n\n</code-example>\n<p translation-result=\"on\">有关更多信息，请参阅<a href=\"extended-diagnostics#configuration\">扩展诊断配置</a>。</p><p translation-origin=\"off\">See <a href=\"extended-diagnostics#configuration\">extended diagnostic configuration</a> for more info.</p>\n\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n\n</div>\n\n<!-- links to this doc:\n - extended-diagnostics\n-->\n<!-- links from this doc:\n - api/core/Component\n - extended-diagnostics#configuration\n - extended-diagnostics/NG8107#description\n - extended-diagnostics/NG8107#ng8107-optional-chain-not-nullable可选链不能是可空值\n - extended-diagnostics/NG8107#what-if-i-cant-avoid-this\n - extended-diagnostics/NG8107#what-should-i-do-instead\n - extended-diagnostics/NG8107#如果我无法避免这种情况怎么办\n - extended-diagnostics/NG8107#我该怎么办\n - extended-diagnostics/NG8107#说明\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/extended-diagnostics/NG8107.md?message=docs(...)%3A%20请简述你的修改...\n-->"}