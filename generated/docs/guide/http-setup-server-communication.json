{"id":"guide/http-setup-server-communication","title":"HTTP: Setup for server communication","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/http-setup-server-communication.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"http-setup-for-server-communication\" translation-result=\"on\">HTTP：服务器通信设置<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/http-setup-server-communication#http-setup-for-server-communication\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">HTTP: Setup for server communication<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/http-setup-server-communication#http-setup-for-server-communication\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">要想使用 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code>，就要先导入 Angular 的 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>。大多数应用都会在根模块 <code>AppModule</code> 中导入它。</p><p translation-origin=\"off\">Before you can use <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code>, you need to import the Angular <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>.\nMost apps do so in the root <code>AppModule</code>.</p>\n\n<code-example header=\"app/app.module.ts (excerpt)\" path=\"http/src/app/app.module.ts\" region=\"sketch\">\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a> } from '@angular/common/<a href=\"api/common/http\" class=\"code-anchor\">http</a>';\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n    // import <a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a> after BrowserModule.\n    <a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a>,\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n\n</code-example>\n<p translation-result=\"on\">然后，你可以把 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 服务注入成一个应用类的依赖项，如下面的 <code>ConfigService</code> 例子所示。</p><p translation-origin=\"off\">You can then inject the <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> service as a dependency of an application class, as shown in the following <code>ConfigService</code> example.</p>\n\n<code-example header=\"app/config/config.service.ts (excerpt)\" path=\"http/src/app/config/config.service.ts\" region=\"proto\">\nimport { <a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> } from '@angular/core';\nimport { <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a> } from '@angular/common/<a href=\"api/common/http\" class=\"code-anchor\">http</a>';\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>()\nexport class ConfigService {\n  constructor(private <a href=\"api/common/http\" class=\"code-anchor\">http</a>: <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a>) { }\n}\n\n</code-example>\n<p translation-result=\"on\"><code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 服务为所有工作都使用了<a href=\"guide/glossary#observable\" title=\"可观察的定义\">可观察对象</a>。你必须导入范例代码片段中出现的 RxJS 可观察对象和操作符。比如 <code>ConfigService</code> 中的这些导入就很典型。</p><p translation-origin=\"off\">The <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> service makes use of <a href=\"guide/glossary#observable\" title=\"Observable definition\">observables</a> for all transactions.\nYou must import the RxJS observable and operator symbols that appear in the example snippets.\nThese <code>ConfigService</code> imports are typical.</p>\n\n<code-example header=\"app/config/config.service.ts (RxJS imports)\" path=\"http/src/app/config/config.service.ts\" region=\"rxjs-imports\">\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">你可以运行本指南随附的<live-example></live-example>。</p><p translation-origin=\"off\">You can run the <live-example></live-example> that accompanies this guide.</p>\n\n<p translation-result=\"on\">示例应用不需要数据服务器。它依赖于 <a href=\"https://github.com/angular/angular/tree/main/packages/misc/angular-in-memory-web-api\">Angular 的 <em>in-memory-web-api</em></a>，该模块替换了 <em>HttpClient</em> 模块的 <code><a href=\"api/common/http/HttpBackend\" class=\"code-anchor\">HttpBackend</a></code>。这个替代服务模拟了 REST 后端的行为。</p><p translation-origin=\"off\">The sample app does not require a data server.\nIt relies on the <a href=\"https://github.com/angular/angular/tree/main/packages/misc/angular-in-memory-web-api\">Angular <em>in-memory-web-api</em></a>, which replaces the <em>HttpClient</em> module's <code><a href=\"api/common/http/HttpBackend\" class=\"code-anchor\">HttpBackend</a></code>.\nThe replacement service simulates the behavior of a REST-like backend.</p>\n\n<p translation-result=\"on\">查看 <code>AppModule</code> 中的 <em>imports</em>，就能了解它是如何配置的。</p><p translation-origin=\"off\">Look at the <code>AppModule</code> <em>imports</em> to see how it is configured.</p>\n\n</div>\n\n  <div class=\"reviewed\">最后复查时间：11/3/2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common/http\n - api/common/http/HttpBackend\n - api/common/http/HttpClient\n - api/common/http/HttpClientModule\n - api/core/Injectable\n - api/core/NgModule\n - api/platform-browser/BrowserModule\n - guide/glossary#observable\n - guide/http-setup-server-communication#http-setup-for-server-communication\n - guide/http-setup-server-communication#http服务器通信设置\n - https://github.com/angular/angular/tree/main/packages/misc/angular-in-memory-web-api\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/guide/http-setup-server-communication.md?message=docs%3A%20请简述你的修改...\n-->"}