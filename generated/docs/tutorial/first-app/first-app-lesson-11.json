{"id":"tutorial/first-app/first-app-lesson-11","title":"Lesson 11 - Integrate details page into application","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/aio/content/tutorial/first-app/first-app-lesson-11.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"lesson-11---integrate-details-page-into-application\" translation-result=\"on\">第 11 课 - 将详情页面集成到应用程序中<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#lesson-11---integrate-details-page-into-application\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\">Lesson 11 - Integrate details page into application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#lesson-11---integrate-details-page-into-application\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本课程示范了如何将详情页面连接到应用程序中。</p><p translation-origin=\"off\">This tutorial lesson demonstrates how to connect the details page to your app.</p>\n\n<p translation-result=\"on\"><strong>所需时间：</strong> 完成这节课预计需要 20 分钟左右。</p><p translation-origin=\"off\"><strong>Time required:</strong> expect to spend about 20 minutes to complete this lesson.</p>\n\n<h2 id=\"before-you-start\" translation-result=\"on\">开始之前<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#before-you-start\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Before you start<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#before-you-start\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">这节课以上一课的代码为起点，你可以：</p><p translation-origin=\"off\">This lesson starts with the code from the previous lesson, so you can:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">在集成开发环境（IDE）中使用你在第 10 课中创建的代码。</p><p translation-origin=\"off\">Use the code that you created in Lesson 10 in your integrated development environment (IDE).</p>\n\n</li>\n<li>\n<p translation-result=\"on\">从上一课的代码示例开始。选择<live-example name=\"first-app-lesson-10\"></live-example>，以便</p><p translation-origin=\"off\">Start with the code example from the previous lesson. Choose the <live-example name=\"first-app-lesson-10\"></live-example> from Lesson 10 where you can:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用 StackBlitz 中的<em>在线例子</em>，其中 StackBlitz 的界面就是你的 IDE。</p><p translation-origin=\"off\">Use the <em>live example</em> in StackBlitz, where the StackBlitz interface is your IDE.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用<em>下载示例</em>并在你的 IDE 中打开它。</p><p translation-origin=\"off\">Use the <em>download example</em> and open it in your IDE.</p>\n\n</li>\n</ul>\n</li>\n</ul>\n<p translation-result=\"on\">如果你还没看过简介，请访问 <a href=\"tutorial/first-app\">Angular 教程简介</a>以确保你已具备完成这节课所需的一切知识。</p><p translation-origin=\"off\">If you haven't reviewed the introduction, visit the <a href=\"tutorial/first-app\">Introduction to Angular tutorial</a> to make sure you have everything you need to complete this lesson.</p>\n\n<p translation-result=\"on\">如果你在这节课中遇到任何问题，可以查看这节课的完整代码，参见<live-example></live-example>。</p><p translation-origin=\"off\">If you have any trouble during this lesson, you can review the completed code for this lesson, in the <live-example></live-example> for this lesson.</p>\n\n<h2 id=\"after-you-finish\" translation-result=\"on\">完成之后<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#after-you-finish\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">After you finish<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#after-you-finish\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">当这节课结束时，应用程序将支持路由到详情页面。</p><p translation-origin=\"off\">At the end of this lesson your application will have support for routing to the details page.</p>\n\n<h2 id=\"conceptual-preview-of-routing-with-route-parameters\" translation-result=\"on\">带参数路由的概念性预览<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#conceptual-preview-of-routing-with-route-parameters\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Conceptual preview of routing with route parameters<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#conceptual-preview-of-routing-with-route-parameters\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在上一课中，你向应用添加了路由，在这节课中，你将扩展应用支持的路由类型。每个房屋位置都有自己的详情，当用户导航到该条目的详情页面时应显示这些详情。要实现此目标，就要使用路由参数。</p><p translation-origin=\"off\">In the previous lesson, you added routing to your app and in this lesson you will expand the types of routing your app supports. Each housing location has specific details that should be displayed when a user navigates to the details page for that item. To accomplish this goal, you will need to use route parameters.</p>\n\n<p translation-result=\"on\">路由参数使你能够将动态信息作为路由 URL 的一部分。要确定用户点击了哪个房屋位置，你要使用 <code>HousingLocation</code> 类型的 <code>id</code> 属性。</p><p translation-origin=\"off\">Route parameters enable you to include dynamic information as a part of your route URL. To identify which housing location a user has clicked on you will use the <code>id</code> property of the <code>HousingLocation</code> type.</p>\n\n<h2 id=\"lesson-steps\" translation-result=\"on\">课程步骤<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#lesson-steps\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Lesson steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#lesson-steps\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在 IDE 中对应用程序代码执行下列步骤。</p><p translation-origin=\"off\">Perform these steps on the app code in your IDE.</p>\n\n<h3 id=\"step-1---create-a-new-service-for-your-app\" translation-result=\"on\">第 1 步 - 为你的应用创建新服务<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-1---create-a-new-service-for-your-app\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Step 1 - Create a new service for your app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-1---create-a-new-service-for-your-app\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在第 10 课中，你向 <code>src/app/routes.ts</code> 添加了第二条路由，该路由包含一个特殊区段，用于标识路由参数 <code>id</code>：</p><p translation-origin=\"off\">In lesson 10, you added a second route to <code>src/app/routes.ts</code>, this route includes a special segment that identifies the route parameter, <code>id</code>:</p>\n\n    <code-example format=\"javascript\" language=\"javascript\">\n    'details/:id'\n    </code-example>\n<p translation-result=\"on\">在这种情况下，<code>:id</code> 是动态的，并且会根据代码请求路由的方式而变化。</p><p translation-origin=\"off\">In this case, <code>:id</code> is dynamic and will change based on how the route is requested by the code.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>src/app/housing-location/housing-location.component.ts</code> 中，将锚点标记（<code>&lt;a&gt;</code>）添加到 <code>section</code> 元素并包含 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 指令：</p><p translation-origin=\"off\">In <code>src/app/housing-location/housing-location.component.ts</code>, add an anchor tag to the <code>section</code> element and include the <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> directive:</p>\n\n<code-example header=\"Add anchor with a routerLink directive to housing-location.component.ts\" path=\"first-app-lesson-11/src/app/housing-location/housing-location.component.ts\" region=\"add-router-link\">\ntemplate: `\n  &lt;section class=\"listing\"&gt;\n    &lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> class=\"listing-photo\" [src]=\"housingLocation.photo\" alt=\"Exterior photo of {{housingLocation.name}}\"&gt;\n    &lt;h2 class=\"listing-heading\"&gt;{{ housingLocation.name }}&lt;/h2&gt;\n    &lt;p class=\"listing-location\"&gt;{{ housingLocation.city}}, {{housingLocation.state }}&lt;/p&gt;\n    &lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/details', housingLocation.id]\"&gt;Learn More&lt;/a&gt;\n  &lt;/section&gt;\n`,\n\n</code-example>\n<p translation-result=\"on\"><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 指令使 Angular 的路由器能够在应用程序中创建动态链接。赋值给 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 的值是一个包含两个条目的数组：路径的静态部分和动态数据。</p><p translation-origin=\"off\">The <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> directive enables Angular's router to create dynamic links in the application. The value assigned to the <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> is an array with two entries: the static portion of the path and the dynamic data.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">此时你可以确认路由在应用程序中能正常工作。在浏览器中，刷新主页并单击房屋位置的“了解更多”按钮。</p><p translation-origin=\"off\">At this point you can confirm that the routing is working in your app. In the browser, refresh the home page and click the \"learn more\" button for a housing location.</p>\n\n<section ng-should-translate=\"\" class=\"lightbox\">\n<img alt=\"details page displaying the text 'details works!'\" src=\"generated/images/guide/faa/homes-app-lesson-11-step-1.png\" width=\"1920\" height=\"231\">\n</section>\n</li>\n</ol>\n<h3 id=\"step-2---get-route-parameters\" translation-result=\"on\">第 2 步 - 获取路由参数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-2---get-route-parameters\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Step 2 - Get route parameters<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-2---get-route-parameters\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在此步骤中，你将获取 <code>DetailsComponent</code> 中的路由参数。目前，该应用程序显示 <code>details works!</code>，接下来你将更新代码以显示使用路由参数传过来的 <code>id</code> 值。</p><p translation-origin=\"off\">In this step, you will get the route parameter in the <code>DetailsComponent</code>. Currently, the app displays <code>details works!</code>, next you'll update the code to display the <code>id</code> value passed using the route parameters.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>src/app/details/details.component.ts</code> 中更新模板以导入你需要在 <code>DetailsComponent</code> 中使用的函数、类和服务：</p><p translation-origin=\"off\">In <code>src/app/details/details.component.ts</code> update the template to import the functions, classes and services that you'll need to use in the <code>DetailsComponent</code>:</p>\n\n<code-example header=\"Update file level imports\" path=\"first-app-lesson-11/src/app/details/details.component.ts\" region=\"import-resources-for-details\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, inject } from '@angular/core';\nimport { <a href=\"api/common/CommonModule\" class=\"code-anchor\">CommonModule</a> } from '@angular/common';\nimport { <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> } from '@angular/router';\nimport { HousingService } from '../housing.service';\nimport { HousingLocation } from '../housinglocation';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">更新 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器的 <code>template</code> 属性以显示值 <code>housingLocationId</code>：</p><p translation-origin=\"off\">Update the <code>template</code> property of the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator to display the value <code>housingLocationId</code>:</p>\n\n<code-example format=\"javascript\" language=\"javascript\">\n  template: `&lt;p&gt;details works! {{ housingLocationId }}&lt;/p&gt;`,\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">使用以下代码更新 <code>DetailsComponent</code> 的主体：</p><p translation-origin=\"off\">Update the body of the <code>DetailsComponent</code> with the following code:</p>\n\n<code-example format=\"javascript\" language=\"javascript\">\n    export class DetailsComponent {\n        route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> = inject(<a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>);\n        housingLocationId = -1;\n        constructor() {\n            this.housingLocationId = Number(this.route.snapshot.params['id']);\n        }\n    }\n</code-example>\n<p translation-result=\"on\">此代码令 <code>DetailsComponent</code> 可以访问路由器特性 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，使你能访问关于当前路由的数据。在构造函数中，代码将 id 参数从路由转换为数字。</p><p translation-origin=\"off\">This code give the <code>DetailsComponent</code> access to the <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> router feature that enables you to have access to the data about the current route. In the constructor, the code converts the id parameter from the route to a number.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">保存所有更改。</p><p translation-origin=\"off\">Save all changes.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在浏览器中，单击其中一个房屋位置的“了解更多”链接，并确认页面上显示的数值与数据中该位置的 <code>id</code> 属性匹配。</p><p translation-origin=\"off\">In the browser, click on one of the housing location \"learn more\" links and confirm that the numeric value displayed on the page matches the <code>id</code> property for that location in the data.</p>\n\n</li>\n</ol>\n<h3 id=\"step-3---customize-the-detailcomponent\" translation-result=\"on\">第 3 步 - 自定义 <code>DetailComponent</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-3---customize-the-detailcomponent\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Step 3 - Customize the <code>DetailComponent</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-3---customize-the-detailcomponent\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">路由已能在应用程序中正常工作，接下来要更新 <code>DetailsComponent</code> 的模板，以显示由路由参数的房屋位置表示的特定数据。</p><p translation-origin=\"off\">Now that routing is working properly in the application this is a great time to update the template of the <code>DetailsComponent</code> to display the specific data represented by the housing location for the route parameter.</p>\n\n<p translation-result=\"on\">要访问数据，你需要添加对 <code>HousingService</code> 的调用。</p><p translation-origin=\"off\">To access the data you will add a call to the <code>HousingService</code>.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">把模板代码更新成这样：</p><p translation-origin=\"off\">Update the template code to match the following code:</p>\n\n<code-example header=\"Update the DetailsComponent template in src/app/details/details.component.ts\" path=\"first-app-lesson-11/src/app/details/details.component.ts\" region=\"update-details-template\">\ntemplate: `\n  &lt;article&gt;\n    &lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> class=\"listing-photo\" [src]=\"housingLocation?.photo\"\n      alt=\"Exterior photo of {{housingLocation?.name}}\"/&gt;\n    &lt;section class=\"listing-description\"&gt;\n      &lt;h2 class=\"listing-heading\"&gt;{{housingLocation?.name}}&lt;/h2&gt;\n      &lt;p class=\"listing-location\"&gt;{{housingLocation?.city}}, {{housingLocation?.state}}&lt;/p&gt;\n    &lt;/section&gt;\n    &lt;section class=\"listing-features\"&gt;\n      &lt;h2 class=\"section-heading\"&gt;About this housing location&lt;/h2&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Units available: {{housingLocation?.availableUnits}}&lt;/li&gt;\n        &lt;li&gt;Does this location have wifi: {{housingLocation?.wifi}}&lt;/li&gt;\n        &lt;li&gt;Does this location have laundry: {{housingLocation?.laundry}}&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/section&gt;\n  &lt;/article&gt;\n`,\n\n</code-example>\n<p translation-result=\"on\">请注意，正在使用可选的链式运算符（<code>?</code>）访问 <code>housingLocation</code> 属性。这会确保如果 <code>housingLocation</code> 值为 <code>null</code> 或 <code>undefined</code> 时，应用程序不会崩溃。</p><p translation-origin=\"off\">Notice that the <code>housingLocation</code> properties are being accessed with the optional chaining operator <code>?</code>. This ensures that if the <code>housingLocation</code> value is null or undefined the application doesn't crash.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">把 <code>DetailsComponent</code> 类的主体更新成这样：</p><p translation-origin=\"off\">Update the body of the <code>DetailsComponent</code> class to match the following code:</p>\n\n<code-example header=\"Update the DetailsComponent class in src/app/details/details.component.ts\" path=\"first-app-lesson-11/src/app/details/details.component.ts\" region=\"get-housing-details\">\nexport class DetailsComponent {\n\n  route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> = inject(<a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>);\n  housingService = inject(HousingService);\n  housingLocation: HousingLocation | undefined;\n\n  constructor() {\n    const housingLocationId = Number(this.route.snapshot.params['id']);\n    this.housingLocation = this.housingService.getHousingLocationById(housingLocationId);\n  }\n\n}\n\n</code-example>\n<p translation-result=\"on\">现在该组件有了根据所选房屋位置显示正确信息的代码。构造函数现在包括对 <code>HousingService</code> 的调用，以将路由参数作为实参传给 <code>getHousingLocationById</code> 服务函数。</p><p translation-origin=\"off\">Now the component has the code to display the correct information based on the selected housing location. The constructor now includes a call to the <code>HousingService</code> to pass the route parameter as an argument to the <code>getHousingLocationById</code> service function.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">将以下样式复制到 <code>src/app/details/details.component.css</code> 文件中：</p><p translation-origin=\"off\">Copy the following styles into the <code>src/app/details/details.component.css</code> file:</p>\n\n<code-example header=\"Add styles for the DetailsComponent\" path=\"first-app-lesson-11/src/app/details/details.component.css\" region=\"add-details-styles\">\n.listing-photo {\n  height: 600px;\n  width: 50%;\n  object-fit: cover;\n  border-radius: 30px;\n  float: right;\n}\n\n.listing-heading {\n  font-size: 48pt;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.listing-location::before {\n  content: url('/assets/location-pin.svg') / '';\n}\n\n.listing-location {\n  font-size: 24pt;\n  margin-bottom: 15px;\n}\n\n.listing-features &gt; .section-heading {\n  color: var(--secondary-color);\n  font-size: 24pt;\n  margin-bottom: 15px;\n}\n\n.listing-features {\n  margin-bottom: 20px;\n}\n\n.listing-features li {\n  font-size: 14pt;\n}\n\nli {\n  list-style-type: none;\n}\n\n.listing-apply .section-heading {\n  font-size: 18pt;\n  margin-bottom: 15px;\n}\n\nlabel, input {\n  display: block;\n}\nlabel {\n  color: var(--secondary-color);\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 12pt;\n}\ninput {\n  font-size: 16pt;\n  margin-bottom: 15px;\n  padding: 10px;\n  width: 400px;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n  border-bottom: solid .3px;\n}\n@media (max-width: 1024px) {\n  .listing-photo {\n    width: 100%;\n    height: 400px;\n  }\n}\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">保存你的更改。</p><p translation-origin=\"off\">Save your changes.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在浏览器中刷新页面并确认当你单击给定房屋位置的“了解更多”链接时，详情页面会根据所选条目的数据显示正确的信息。</p><p translation-origin=\"off\">In the browser refresh the page and confirm that when you click on the \"learn more\" link for a given housing location the details page displays the correct information based on the data for that selected item.</p>\n\n<section ng-should-translate=\"\" class=\"lightbox\">\n<img alt=\"Details page listing home info\" src=\"generated/images/guide/faa/homes-app-lesson-11-step-3.png\" width=\"1920\" height=\"1159\">\n</section>\n</li>\n</ol>\n<h3 id=\"step-4---add-navigation-to-the-homecomponent\" translation-result=\"on\">第 4 步 - 将导航添加到 <code>HomeComponent</code> 中<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-4---add-navigation-to-the-homecomponent\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Step 4 - Add navigation to the <code>HomeComponent</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#step-4---add-navigation-to-the-homecomponent\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在上一课中，你更新了 <code>AppComponent</code> 模板以包含 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>。添加该代码会更新应用程序，以便在单击徽标时能够导航回 <code>HomeComponent</code>。</p><p translation-origin=\"off\">In a previous lesson you updated the <code>AppComponent</code> template to include a <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>. Adding that code updated your app to enable navigation back to the <code>HomeComponent</code> whenever the logo is clicked.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">确认你的代码与以下内容一致：</p><p translation-origin=\"off\">Confirm that your code matches the following:</p>\n\n<code-example header=\"Add routerLink to AppComponent\" path=\"first-app-lesson-11/src/app/app.component.ts\" region=\"add-router-link-to-header\">\ntemplate: `\n  &lt;main&gt;\n    &lt;a [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/']\"&gt;\n      &lt;header class=\"brand-name\"&gt;\n        &lt;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> class=\"brand-logo\" src=\"/assets/logo.svg\" alt=\"logo\" aria-hidden=\"true\"&gt;\n      &lt;/header&gt;\n    &lt;/a&gt;\n    &lt;section class=\"content\"&gt;\n      &lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;&lt;/<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n`,\n\n</code-example>\n<p translation-result=\"on\">你的代码可能已经是最新的，但还是请再次确认。</p><p translation-origin=\"off\">Your code may already be up-to-date but confirm to be sure.</p>\n\n</li>\n</ol>\n<h2 id=\"lesson-review\" translation-result=\"on\">课程复习<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#lesson-review\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Lesson Review<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#lesson-review\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">在这节课中，你将应用更新为：</p><p translation-origin=\"off\">In this lesson you updated your app to:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">使用路由参数将数据传给路由</p><p translation-origin=\"off\">use route parameters to pass data to a route</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> 指令使用动态数据创建路由</p><p translation-origin=\"off\">use the <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> directive to use dynamic data to create a route</p>\n\n</li>\n<li>\n<p translation-result=\"on\">使用路由参数从 <code>HousingService</code> 检索数据以显示特定房屋位置的信息。</p><p translation-origin=\"off\">use route parameter to retrieve data from the <code>HousingService</code> to display housing location specific information.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">到目前为止真的很棒。</p><p translation-origin=\"off\">Really great work so far. </p>\n\n<p translation-result=\"on\">如果你在学习这节课时遇到了任何问题，可以在<live-example></live-example>查看完整代码。</p><p translation-origin=\"off\">If you are having any trouble with this lesson, you can review the completed code for it in the <live-example></live-example>.</p>\n\n<h2 id=\"next-steps\" translation-result=\"on\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#next-steps\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">Next Steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"tutorial/first-app/first-app-lesson-12\">第 12 课 - 向 Angular 应用程序中添加表单</a></p><p translation-origin=\"off\"><a href=\"tutorial/first-app/first-app-lesson-12\">Lesson 12 - Adding forms to your Angular application</a></p>\n\n</li>\n</ul>\n<h2 id=\"more-information\" translation-result=\"on\">更多信息<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#more-information\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\">More information<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-11#more-information\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">有关这节课中涵盖的主题的更多信息，请访问：</p><p translation-origin=\"off\">For more information about the topics covered in this lesson, visit:</p>\n\n<!-- vale Angular.Google_WordListSuggestions = NO -->\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/router#accessing-query-parameters-and-fragments\">路由参数</a></p><p translation-origin=\"off\"><a href=\"guide/router#accessing-query-parameters-and-fragments\">Route Parameters</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/routing-overview\">Angular 中的路由概述</a></p><p translation-origin=\"off\"><a href=\"guide/routing-overview\">Routing in Angular Overview</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/router\">常见路由任务</a></p><p translation-origin=\"off\"><a href=\"guide/router\">Common Routing Tasks</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">可选的链接运算符</a></p><p translation-origin=\"off\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional Chaining Operator</a></p>\n\n</li>\n</ul>\n\n  \n</div>\n\n\n<!-- links to this doc:\n - tutorial/first-app/first-app-lesson-10\n-->\n<!-- links from this doc:\n - api/common/CommonModule\n - api/common/NgOptimizedImage\n - api/core/Component\n - api/router/ActivatedRoute\n - api/router/RouterLink\n - api/router/RouterOutlet\n - guide/router\n - guide/router#accessing-query-parameters-and-fragments\n - guide/routing-overview\n - tutorial/first-app\n - tutorial/first-app/first-app-lesson-11#after-you-finish\n - tutorial/first-app/first-app-lesson-11#before-you-start\n - tutorial/first-app/first-app-lesson-11#conceptual-preview-of-routing-with-route-parameters\n - tutorial/first-app/first-app-lesson-11#lesson-11---integrate-details-page-into-application\n - tutorial/first-app/first-app-lesson-11#lesson-review\n - tutorial/first-app/first-app-lesson-11#lesson-steps\n - tutorial/first-app/first-app-lesson-11#more-information\n - tutorial/first-app/first-app-lesson-11#next-steps\n - tutorial/first-app/first-app-lesson-11#step-1---create-a-new-service-for-your-app\n - tutorial/first-app/first-app-lesson-11#step-2---get-route-parameters\n - tutorial/first-app/first-app-lesson-11#step-3---customize-the-detailcomponent\n - tutorial/first-app/first-app-lesson-11#step-4---add-navigation-to-the-homecomponent\n - tutorial/first-app/first-app-lesson-11#下一步\n - tutorial/first-app/first-app-lesson-11#完成之后\n - tutorial/first-app/first-app-lesson-11#带参数路由的概念性预览\n - tutorial/first-app/first-app-lesson-11#开始之前\n - tutorial/first-app/first-app-lesson-11#更多信息\n - tutorial/first-app/first-app-lesson-11#第-1-步---为你的应用创建新服务\n - tutorial/first-app/first-app-lesson-11#第-11-课---将详情页面集成到应用程序中\n - tutorial/first-app/first-app-lesson-11#第-2-步---获取路由参数\n - tutorial/first-app/first-app-lesson-11#第-3-步---自定义-detailcomponent\n - tutorial/first-app/first-app-lesson-11#第-4-步---将导航添加到-homecomponent-中\n - tutorial/first-app/first-app-lesson-11#课程复习\n - tutorial/first-app/first-app-lesson-11#课程步骤\n - tutorial/first-app/first-app-lesson-12\n - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\n - https://github.com/ng-docs/angular-cn/edit/cn/aio/content/tutorial/first-app/first-app-lesson-11.md?message=docs%3A%20请简述你的修改...\n-->"}