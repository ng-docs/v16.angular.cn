{"id":"api/router","title":"@angular/router","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/router\", \"name\": \"@angular/router\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/router/PACKAGE.md?message=docs(...)%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/PACKAGE.md\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n<header ng-should-translate=\"\" class=\"api-header\">\n  <h1 id=\"angularrouter\">@angular/router<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#angularrouter\"><i class=\"material-icons\">link</i></a></h1>\n  <label class=\"api-type-label package\">package</label>\n  \n  \n  \n</header>\n\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\"><p>Implements the Angular Router service , which enables navigation from one view to the next as users perform application tasks.</p>\n\n  <p>Defines the <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> object that maps a URL path to a component, and the <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> directive\nthat you use to place a routed view in a template, as well as a complete API for configuring, querying, and controlling the router state.</p>\n<p>Import <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code> to use the Router service in your app.\nFor more usage information, see the <a href=\"guide/router\">Routing and Navigation</a> guide.</p>\n\n\n  \n\n  \n  <h2 translation-result=\"on\" id=\"入口点\">入口点<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#入口点\"><i class=\"material-icons\">link</i></a></h2>\n  <h2 translation-origin=\"off\" id=\"entry-points\">Entry points<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#entry-points\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"主要\">主要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#主要\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"primary\">Primary<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#primary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router#primary-entry-point-exports\">@angular/router</a></code></td>\n        <td>\n          \n          <p>Implements the Angular Router service , which enables navigation from one view to the next as users perform application tasks.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"次要\">次要<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#次要\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"secondary\">Secondary<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#secondary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/testing\">@angular/router/testing</a></code></td>\n        <td>\n          \n          <p>Supplies a testing module for the Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> subsystem.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/upgrade\">@angular/router/upgrade</a></code></td>\n        <td>\n          \n          <p>Provides support for upgrading routing applications from Angular JS to Angular.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n\n  <h2 translation-result=\"on\" id=\"主要入口点的导出\">主要入口点的导出<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#主要入口点的导出\"><i class=\"material-icons\">link</i></a></h2>\n  <h2 translation-origin=\"off\" id=\"primary-entry-point-exports\">Primary entry point exports<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#primary-entry-point-exports\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#ngmodules\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterModule\">RouterModule</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">添加指令和提供者，以便在应用程序中定义的视图之间进行应用内导航。使用 Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务以声明方式指定应用程序状态并管理状态转换。</p><p translation-origin=\"off\">Adds directives and providers for in-app navigation among views defined in an application.\nUse the Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> service to declaratively specify application states and manage state\ntransitions.</p>\n\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类\">类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#类\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"classes\">Classes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#classes\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivatedRoute\">ActivatedRoute</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">允许访问与某出口中加载的组件关联路由信息。用于遍历 <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> 树并从节点提取信息。</p><p translation-origin=\"off\">Provides access to information about a route associated with a component\nthat is loaded in an outlet.\nUse to traverse the <code><a href=\"api/router/RouterState\" class=\"code-anchor\">RouterState</a></code> tree and extract information from nodes.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivatedRouteSnapshot\">ActivatedRouteSnapshot</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">包含与当前组件相关的路由的当前瞬间信息。<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 也可用于遍历路由器的状态树。<code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code> 也能用于遍历路由器状态树。</p><p translation-origin=\"off\">Contains the information about a route associated with a component loaded in an\noutlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\ntraverse the router state tree.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivationEnd\">ActivationEnd</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在路由的“解析”阶段的激活部分结束时触发的事件。</p><p translation-origin=\"off\">An event triggered at the end of the activation part\nof the Resolve phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ActivationStart\">ActivationStart</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在路由的“解析”阶段的激活部分开始时触发的事件。</p><p translation-origin=\"off\">An event triggered at the start of the activation part\nof the Resolve phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/BaseRouteReuseStrategy\">BaseRouteReuseStrategy</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">此基本路由复用策略仅在匹配的路由器配置完全相同时复用路由。这样可以防止仅在片段或查询参数发生更改时销毁和重新创建组件（也就是<em>复用</em>现有组件）。</p><p translation-origin=\"off\">This base route reuse strategy only reuses routes when the matched router configs are\nidentical. This prevents components from being destroyed and recreated\nwhen just the route parameters, query parameters or fragment change\n(that is, the existing component is <em>reused</em>).</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ChildActivationEnd\">ChildActivationEnd</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在路由的“解析”阶段的子路由激活部分结束时触发的事件。</p><p translation-origin=\"off\">An event triggered at the end of the child-activation part\nof the Resolve phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ChildActivationStart\">ChildActivationStart</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在路由的“解析”阶段的子路由激活部分开始时触发的事件。</p><p translation-origin=\"off\">An event triggered at the start of the child-activation\npart of the Resolve phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ChildrenOutletContexts\">ChildrenOutletContexts</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">存储关于子级（=嵌套）<code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的上下文信息。</p><p translation-origin=\"off\">Store contextual information about the children (= nested) <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code></p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DefaultTitleStrategy\">DefaultTitleStrategy</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">使用 <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> 服务更新标题的路由器使用的默认 <code><a href=\"api/router/TitleStrategy\" class=\"code-anchor\">TitleStrategy</a></code>。</p><p translation-origin=\"off\">The default <code><a href=\"api/router/TitleStrategy\" class=\"code-anchor\">TitleStrategy</a></code> used by the router that updates the title using the <code><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a></code> service.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DefaultUrlSerializer\">DefaultUrlSerializer</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a></code> 的默认实现。</p><p translation-origin=\"off\">A default implementation of the <code><a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/GuardsCheckEnd\">GuardsCheckEnd</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示路由的守卫（<code>Guard</code>）阶段的结束。</p><p translation-origin=\"off\">An event triggered at the end of the Guard phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/GuardsCheckStart\">GuardsCheckStart</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示路由的守卫（<code>Guard</code>）阶段的开始。</p><p translation-origin=\"off\">An event triggered at the start of the Guard phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationCancel\">NavigationCancel</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">直接或间接取消导航时触发的事件。当路由守卫返回了 <code>false</code>，或返回了 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>\n以发起重定向时，可能会发生这种情况。</p><p translation-origin=\"off\">An event triggered when a navigation is canceled, directly or indirectly.\nThis can happen for several reasons including when a route guard\nreturns <code>false</code> or initiates a redirect by returning a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationEnd\">NavigationEnd</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示当导航成功结束时触发的事件。</p><p translation-origin=\"off\">An event triggered when a navigation ends successfully.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationError\">NavigationError</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示当导航出错时触发的事件。</p><p translation-origin=\"off\">An event triggered when a navigation fails due to an unexpected error.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationSkipped\">NavigationSkipped</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">跳过导航时触发的事件。发生这种情况的原因有很多，包括 onSameUrlHandling 设置为 <code>ignore</code> 并且导航 URL 与当前状态没有区别。</p><p translation-origin=\"off\">An event triggered when a navigation is skipped.\nThis can happen for a couple reasons including onSameUrlHandling\nis set to <code>ignore</code> and the navigation URL is not different than the\ncurrent state.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationStart\">NavigationStart</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">代表导航开始时触发的事件。</p><p translation-origin=\"off\">An event triggered when a navigation starts.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NoPreloading\">NoPreloading</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供不预加载任何模块的预加载策略。</p><p translation-origin=\"off\">Provides a preloading strategy that does not preload any modules.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/OutletContext\">OutletContext</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">存储关于 <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code> 的上下文信息</p><p translation-origin=\"off\">Store contextual information about a <code><a href=\"api/router/RouterOutlet\" class=\"code-anchor\">RouterOutlet</a></code></p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PreloadAllModules\">PreloadAllModules</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供一种预加载策略，以尽快预加载所有模块。</p><p translation-origin=\"off\">Provides a preloading strategy that preloads all modules as quickly as possible.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PreloadingStrategy\">PreloadingStrategy</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供预加载策略。</p><p translation-origin=\"off\">Provides a preloading strategy.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveEnd\">ResolveEnd</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在路由的“解析”阶段结束时触发的事件。</p><p translation-origin=\"off\">An event triggered at the end of the Resolve phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveStart\">ResolveStart</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在路由的“解析”阶段开始时触发的事件。</p><p translation-origin=\"off\">An event triggered at the start of the Resolve phase of routing.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouteConfigLoadEnd\">RouteConfigLoadEnd</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示当某个路由被惰性加载时触发的事件。</p><p translation-origin=\"off\">An event triggered when a route has been lazy loaded.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouteConfigLoadStart\">RouteConfigLoadStart</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示在惰性加载某个路由配置前触发的事件。</p><p translation-origin=\"off\">An event triggered before lazy loading a route configuration.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouteReuseStrategy\">RouteReuseStrategy</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供一种自定义复用已激活路由的方式。</p><p translation-origin=\"off\">Provides a way to customize when activated routes get reused.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Router\">Router</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">一个提供导航和操纵 URL 能力的 NgModule。</p><p translation-origin=\"off\">A service that provides navigation among views and URL manipulation capabilities.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterEvent\">RouterEvent</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">路由器相关事件的（而不是关于特定路由的）基类。对于任何指定的导航，<code><a href=\"api/router/RouterEvent\" class=\"code-anchor\">RouterEvent</a></code> 只会触发一次。</p><p translation-origin=\"off\">Base for events the router goes through, as opposed to events tied to a specific\nroute. Fired one time for any given navigation.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterPreloader\">RouterPreloader</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">预加载器会乐观加载所有路由器配置，以使导航到应用程序的惰性加载部分的速度更快。</p><p translation-origin=\"off\">The preloader optimistically loads all router configurations to\nmake navigations into lazily-loaded sections of the application faster.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterState\">RouterState</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将路由器的状态表示为已激活路由的树。</p><p translation-origin=\"off\">Represents the state of the router as a tree of activated routes.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterStateSnapshot\">RouterStateSnapshot</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示路由器在当前瞬间的状态。</p><p translation-origin=\"off\">Represents the state of the router at a moment in time.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RoutesRecognized\">RoutesRecognized</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示当路由被识别出来时触发的事件。</p><p translation-origin=\"off\">An event triggered when routes are recognized.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Scroll\">Scroll</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示一个滚动事件。</p><p translation-origin=\"off\">An event triggered by scrolling.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/TitleStrategy\">TitleStrategy</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供一种在路由器导航后设置页面标题的策略。</p><p translation-origin=\"off\">Provides a strategy for setting the page title after a router navigation.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlHandlingStrategy\">UrlHandlingStrategy</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供一种将 AngularJS 应用程序迁移到 Angular 的方法。</p><p translation-origin=\"off\">Provides a way to migrate AngularJS applications to Angular.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlSegment\">UrlSegment</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示一个 URL 段。</p><p translation-origin=\"off\">Represents a single URL segment.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlSegmentGroup\">UrlSegmentGroup</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示已解析的 URL 段组。</p><p translation-origin=\"off\">Represents the parsed URL segment group.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlSerializer\">UrlSerializer</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将 URL 字符串序列化和反序列化为 URL 树。</p><p translation-origin=\"off\">Serializes and deserializes a URL string into a URL tree.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlTree\">UrlTree</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">代表已解析的 URL。</p><p translation-origin=\"off\">Represents the parsed URL.</p>\n\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n\n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"函数\">函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#函数\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"functions\">Functions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#functions\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/convertToParamMap\">convertToParamMap</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将 <code><a href=\"api/router/Params\" class=\"code-anchor\">Params</a></code> 实例转换为 <code><a href=\"api/router/ParamMap\" class=\"code-anchor\">ParamMap</a></code>。</p><p translation-origin=\"off\">Converts a <code><a href=\"api/router/Params\" class=\"code-anchor\">Params</a></code> instance to a <code><a href=\"api/router/ParamMap\" class=\"code-anchor\">ParamMap</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/createUrlTreeFromSnapshot\">createUrlTreeFromSnapshot</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">创建相对于 <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code> 的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>。</p><p translation-origin=\"off\">Creates a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> relative to an <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/defaultUrlMatcher\">defaultUrlMatcher</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将路由配置 ( <code>route</code> ) 与实际 URL ( <code>segments</code> ) 匹配。</p><p translation-origin=\"off\">Matches the route configuration (<code>route</code>) against the actual URL (<code>segments</code>).</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanActivate\">mapToCanActivate</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将具有 canActivate 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanActivateFn\" class=\"code-anchor\">CanActivateFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p><p translation-origin=\"off\">Maps an array of injectable classes with canActivate functions to an array of equivalent\n<code><a href=\"api/router/CanActivateFn\" class=\"code-anchor\">CanActivateFn</a></code> for use in a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> definition.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanActivateChild\">mapToCanActivateChild</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将具有 canActivateChild 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanActivateChildFn\" class=\"code-anchor\">CanActivateChildFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p><p translation-origin=\"off\">Maps an array of injectable classes with canActivateChild functions to an array of equivalent\n<code><a href=\"api/router/CanActivateChildFn\" class=\"code-anchor\">CanActivateChildFn</a></code> for use in a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> definition.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanDeactivate\">mapToCanDeactivate</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将具有 canDeactivate 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanDeactivateFn\" class=\"code-anchor\">CanDeactivateFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p><p translation-origin=\"off\">Maps an array of injectable classes with canDeactivate functions to an array of equivalent\n<code><a href=\"api/router/CanDeactivateFn\" class=\"code-anchor\">CanDeactivateFn</a></code> for use in a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> definition.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToCanMatch\">mapToCanMatch</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将具有 canMatch 函数的可注入类数组映射到等效的 <code><a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a></code> 数组，以便在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义中使用。</p><p translation-origin=\"off\">Maps an array of injectable classes with canMatch functions to an array of equivalent\n<code><a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a></code> for use in a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> definition.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/mapToResolve\">mapToResolve</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将具有解析函数的可注入类映射到等效的 <code><a href=\"api/router/ResolveFn\" class=\"code-anchor\">ResolveFn</a></code> 以用于 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 定义。</p><p translation-origin=\"off\">Maps an injectable class with a resolve function to an equivalent <code><a href=\"api/router/ResolveFn\" class=\"code-anchor\">ResolveFn</a></code>\nfor use in a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> definition.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/provideRouter\">provideRouter</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">设置为应用程序启用 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 特性所需的提供程序。允许配置一组路由以及应该启用的额外特性。</p><p translation-origin=\"off\">Sets up providers necessary to enable <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> functionality for the application.\nAllows to configure a set of routes as well as extra features that should be enabled.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/provideRoutes\" class=\"deprecated-api-item\">provideRoutes</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> If necessary, provide routes using the <code><a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a></code> <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>.</p>\n<p>如有必要，使用 <code><a href=\"api/router/ROUTES\" class=\"code-anchor\">ROUTES</a></code> <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> 提供路由。</p>\n\n          <p translation-result=\"on\">为一组路由注册<a href=\"guide/glossary#provider\">DI 提供程序</a>。</p><p translation-origin=\"off\">Registers a <a href=\"guide/glossary#provider\">DI provider</a> for a set of routes.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withComponentInputBinding\">withComponentInputBinding</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">启用从 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 状态直接绑定到 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 配置中组件输入的信息。</p><p translation-origin=\"off\">Enables binding information from the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> state directly to the inputs of the component in\n<code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> configurations.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withDebugTracing\">withDebugTracing</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">启用将所有内部导航事件记录到控制台。额外的日志可能可用于调试以检查路由器事件顺序。</p><p translation-origin=\"off\">Enables logging of all internal navigation events to the console.\nExtra logging might be useful for debugging purposes to inspect Router event sequence.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withDisabledInitialNavigation\">withDisabledInitialNavigation</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">禁用初始导航。</p><p translation-origin=\"off\">Disables initial navigation.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withEnabledBlockingInitialNavigation\">withEnabledBlockingInitialNavigation</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将初始导航配置为在创建根组件之前启动。</p><p translation-origin=\"off\">Configures initial navigation to start before the root component is created.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withHashLocation\">withHashLocation</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供使用 URL 片段而不是 history API 的定位策略。</p><p translation-origin=\"off\">Provides the location strategy that uses the URL fragment instead of the history API.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withInMemoryScrolling\">withInMemoryScrolling</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">为路由器导航启用可自定义的滚动行为。</p><p translation-origin=\"off\">Enables customizable scrolling behavior for router navigations.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withNavigationErrorHandler\">withNavigationErrorHandler</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">订阅路由器的导航事件并在发生 <code><a href=\"api/router/NavigationError\" class=\"code-anchor\">NavigationError</a></code> 时调用给定的函数。</p><p translation-origin=\"off\">Subscribes to the Router's navigation events and calls the given function when a\n<code><a href=\"api/router/NavigationError\" class=\"code-anchor\">NavigationError</a></code> happens.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withPreloading\">withPreloading</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">允许配置要使用的预加载策略。该策略是通过提供对实现 <code><a href=\"api/router/PreloadingStrategy\" class=\"code-anchor\">PreloadingStrategy</a></code> 的类的引用来配置的。</p><p translation-origin=\"off\">Allows to configure a preloading strategy to use. The strategy is configured by providing a\nreference to a class that implements a <code><a href=\"api/router/PreloadingStrategy\" class=\"code-anchor\">PreloadingStrategy</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/withRouterConfig\">withRouterConfig</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">允许提供额外的参数来配置路由器。</p><p translation-origin=\"off\">Allows to provide extra parameters to configure Router.</p>\n\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"结构\">结构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#结构\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"structures\">Structures<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#structures\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanActivate\" class=\"deprecated-api-item\">CanActivate</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <code>inject</code> function:\n<code>canActivate: [() =&gt; inject(myGuard).canActivate()]</code>.</p>\n<p>基于类的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 守卫已被弃用，取而代之的是功能性守卫。可注入类可以使用 <code>inject</code> 函数用作功能保护：<code>canActivate: [() =&gt; inject(myGuard).canActivate()]</code>。</p>\n\n          <p translation-result=\"on\">类可以实现的接口，作为决定是否可以激活路由的守卫。如果所有警卫都返回 <code>true</code>，则导航继续。如果任何警卫返回 <code>false</code>，则导航被取消。如果任何警卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，则当前导航被取消，并开始对从警卫返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 进行新的导航。</p><p translation-origin=\"off\">Interface that a class can implement to be a guard deciding if a route can be activated.\nIf all guards return <code>true</code>, navigation continues. If any guard returns <code>false</code>,\nnavigation is cancelled. If any guard returns a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>, the current navigation\nis cancelled and a new navigation begins to the <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> returned from the guard.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanActivateChild\" class=\"deprecated-api-item\">CanActivateChild</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <code>inject</code> function:\n<code>canActivateChild: [() =&gt; inject(myGuard).canActivateChild()]</code>.</p>\n<p>基于类的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 守卫已被弃用，取而代之的是功能性守卫。可注入类可以使用 <code>inject</code> 函数用作功能保护：<code>canActivateChild: [() =&gt; inject(myGuard).canActivateChild()]</code>。</p>\n\n          <p translation-result=\"on\">类可以实现的接口，作为决定是否可以激活子路由的守卫。如果所有警卫都返回 <code>true</code>，则导航继续。如果任何警卫返回 <code>false</code>，则导航被取消。如果任何警卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，则当前导航被取消，并开始对从警卫返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 进行新的导航。</p><p translation-origin=\"off\">Interface that a class can implement to be a guard deciding if a child route can be activated.\nIf all guards return <code>true</code>, navigation continues. If any guard returns <code>false</code>,\nnavigation is cancelled. If any guard returns a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>, current navigation\nis cancelled and a new navigation begins to the <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> returned from the guard.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanDeactivate\" class=\"deprecated-api-item\">CanDeactivate</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <code>inject</code> function:\n<code>canDeactivate: [() =&gt; inject(myGuard).canDeactivate()]</code>.</p>\n<p>基于类的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 守卫已被弃用，取而代之的是功能性守卫。可注入类可以使用 <code>inject</code> 函数用作功能保护：<code>canDeactivate: [() =&gt; inject(myGuard).canDeactivate()]</code>。</p>\n\n          <p translation-result=\"on\">类可以实现的接口，作为决定是否可以停用路由的警卫。如果所有警卫都返回 <code>true</code>，则导航继续。如果任何警卫返回 <code>false</code>，则导航被取消。如果任何警卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，则当前导航被取消，并开始对从警卫返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 进行新的导航。</p><p translation-origin=\"off\">Interface that a class can implement to be a guard deciding if a route can be deactivated.\nIf all guards return <code>true</code>, navigation continues. If any guard returns <code>false</code>,\nnavigation is cancelled. If any guard returns a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>, current navigation\nis cancelled and a new navigation begins to the <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> returned from the guard.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanLoad\" class=\"deprecated-api-item\">CanLoad</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Use <a href=\"api/router/CanMatchFn\"><code>CanMatchFn</code></a> instead</p>\n<p>使用 <a href=\"api/router/CanMatchFn\"><code>CanMatchFn</code></a> 代替</p>\n\n          <p translation-result=\"on\">类可以实现的接口，用于确定是否可以加载子路由。如果所有守卫都返回了 <code>true</code>，那么导航将继续。如果任何守卫返回 <code>false</code>，则导航将被取消。如果任何守卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，当前导航被取消，新的导航开始到守卫所返回的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>。</p><p translation-origin=\"off\">Interface that a class can implement to be a guard deciding if children can be loaded.\nIf all guards return <code>true</code>, navigation continues. If any guard returns <code>false</code>,\nnavigation is cancelled. If any guard returns a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>, current navigation\nis cancelled and a new navigation starts to the <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> returned from the guard.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanMatch\" class=\"deprecated-api-item\">CanMatch</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> guards are deprecated in favor of functional guards. An\ninjectable class can be used as a functional guard using the <code>inject</code> function:\n<code>canMatch: [() =&gt; inject(myGuard).canMatch()]</code>.</p>\n<p>基于类的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 守卫已被弃用，取而代之的是功能性守卫。可注入类可以使用 <code>inject</code> 函数用作功能保护：<code>canMatch: [() =&gt; inject(myGuard).canMatch()]</code>。</p>\n\n          <p translation-result=\"on\">类可以实现的接口作为决定是否可以匹配 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 的守卫。如果所有警卫都返回 <code>true</code>，则导航继续，并且 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 将在激活期间使用 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>。如果任何警卫返回 <code>false</code>，则会跳过 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 进行匹配，并改为处理其他 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 配置。</p><p translation-origin=\"off\">Interface that a class can implement to be a guard deciding if a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> can be matched.\nIf all guards return <code>true</code>, navigation continues and the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> will use the <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> during\nactivation. If any guard returns <code>false</code>, the <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> is skipped for matching and other <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>\nconfigurations are processed instead.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DefaultExport\">DefaultExport</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">具有给定类型的默认导出的 ES 模块对象。</p><p translation-origin=\"off\">An ES Module object with a default export of the given type.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/EventType\">EventType</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">标识路由器事件的类型。</p><p translation-origin=\"off\">Identifies the type of a router event.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ExtraOptions\">ExtraOptions</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">路由器模块的一组配置选项，在 <code>forRoot()</code> 方法中提供。</p><p translation-origin=\"off\">A set of configuration options for a router module, provided in the\n<code>forRoot()</code> method.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InMemoryScrollingOptions\">InMemoryScrollingOptions</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">可与 <code><a href=\"api/router/withInMemoryScrolling\" class=\"code-anchor\">withInMemoryScrolling</a></code> 函数一起使用的滚动特性的配置选项。</p><p translation-origin=\"off\">Configuration options for the scrolling feature which can be used with <code><a href=\"api/router/withInMemoryScrolling\" class=\"code-anchor\">withInMemoryScrolling</a></code>\nfunction.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/IsActiveMatchOptions\">IsActiveMatchOptions</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">一组选项，指定如何在给定当前路由器状态的 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 的情况下确定 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 是否处于活动状态。</p><p translation-origin=\"off\">A set of options which specify how to determine if a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> is active, given the <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>\nfor the current router state.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Navigation\">Navigation</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">有关导航操作的信息。使用<a href=\"api/router/Router#getcurrentnavigation\">Router.getCurrentNavigation() 方法</a>检索最新的导航对象。</p><p translation-origin=\"off\">Information about a navigation operation.\nRetrieve the most recent navigation object with the\n<a href=\"api/router/Router#getcurrentnavigation\">Router.getCurrentNavigation() method</a> .</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationBehaviorOptions\">NavigationBehaviorOptions</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">修改 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航策略的选项。将包含这些属性中的任何一个的对象提供给 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航函数，以控制应如何处理导航。</p><p translation-origin=\"off\">Options that modify the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> navigation strategy.\nSupply an object containing any of these properties to a <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> navigation function to\ncontrol how the navigation should be handled.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationCancellationCode\">NavigationCancellationCode</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 的 <code><a href=\"api/router/NavigationCancel\" class=\"code-anchor\">NavigationCancel</a></code> 事件的代码，用于表明导航失败的原因。</p><p translation-origin=\"off\">A code for the <code><a href=\"api/router/NavigationCancel\" class=\"code-anchor\">NavigationCancel</a></code> event of the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> to indicate the\nreason a navigation failed.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationExtras\">NavigationExtras</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">修改 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航策略的选项。将包含这些属性中的任何一个的对象提供给 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航函数，以控制目标 URL 的构建或解释方式。</p><p translation-origin=\"off\">Options that modify the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> navigation strategy.\nSupply an object containing any of these properties to a <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> navigation function to\ncontrol how the target URL should be constructed or interpreted.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationSkippedCode\">NavigationSkippedCode</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 的 <code><a href=\"api/router/NavigationSkipped\" class=\"code-anchor\">NavigationSkipped</a></code> 事件的代码，用于指示跳过导航的原因。</p><p translation-origin=\"off\">A code for the <code><a href=\"api/router/NavigationSkipped\" class=\"code-anchor\">NavigationSkipped</a></code> event of the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> to indicate the\nreason a navigation was skipped.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ParamMap\">ParamMap</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">提供访问特定于路由的必需和可选参数的映射表。该映射表支持使用 <code>get()</code> 检索单个值或使用 <code>getAll()</code>\n检索多个值。</p><p translation-origin=\"off\">A map that provides access to the required and optional parameters\nspecific to a route.\nThe map supports retrieving a single value with <code>get()</code>\nor multiple values with <code>getAll()</code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/Resolve\" class=\"deprecated-api-item\">Resolve</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> resolvers are deprecated in favor of functional resolvers. An\ninjectable class can be used as a functional guard using the <code>inject</code> function: <code>resolve: {'user': () =&gt; inject(UserResolver).resolve()}</code>.</p>\n<p>基于类的 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 解析器已弃用，取而代之的是函数式解析器。可注入类可以用作使用 <code>inject</code> 函数的功能保护：<code>resolve: {'user': () =&gt; inject(UserResolver).resolve()}</code>。</p>\n\n          <p translation-result=\"on\">类可以实现为数据提供者的接口。数据提供者类可以与路由器一起使用，以在导航期间解析数据。该接口定义了一个 <code>resolve()</code> 方法，该方法会在 <code><a href=\"api/router/ResolveStart\" class=\"code-anchor\">ResolveStart</a></code> 路由器事件之后立即调用。路由器会在最终激活路由之前等待数据被解析。</p><p translation-origin=\"off\">Interface that classes can implement to be a data provider.\nA data provider class can be used with the router to resolve data during navigation.\nThe interface defines a <code>resolve()</code> method that is invoked right after the <code><a href=\"api/router/ResolveStart\" class=\"code-anchor\">ResolveStart</a></code>\nrouter event. The router waits for the data to be resolved before the route is finally activated.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Route\">Route</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">定义单个路由的配置对象。一组路由被收集在 <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> 数组中以定义 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 配置。路由器会尝试使用此对象中定义的配置选项，将给定 URL 的段与每个路由进行匹配。</p><p translation-origin=\"off\">A configuration object that defines a single route.\nA set of routes are collected in a <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> array to define a <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> configuration.\nThe router attempts to match segments of a given URL against each route,\nusing the configuration options defined in this object.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterConfigOptions\">RouterConfigOptions</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">可以与 <code><a href=\"api/router/withRouterConfig\" class=\"code-anchor\">withRouterConfig</a></code> 函数一起使用的额外配置选项。</p><p translation-origin=\"off\">Extra configuration options that can be used with the <code><a href=\"api/router/withRouterConfig\" class=\"code-anchor\">withRouterConfig</a></code> function.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterFeature\">RouterFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示路由器特性的帮助器类型。</p><p translation-origin=\"off\">Helper type to represent a Router feature.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterOutletContract\">RouterOutletContract</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">一个接口，定义了为 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 开发组件出口的契约。</p><p translation-origin=\"off\">An interface that defines the contract for developing a component outlet for the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlCreationOptions\">UrlCreationOptions</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">修改 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> URL 的选项。将包含这些属性中的任何一个的对象提供给 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航函数，以控制目标 URL 的构建方式。</p><p translation-origin=\"off\">Options that modify the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> URL.\nSupply an object containing any of these properties to a <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> navigation function to\ncontrol how the target URL should be constructed.</p>\n\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"指令\">指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#指令\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"directives\">Directives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#directives\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterLink\">RouterLink</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">当应用于模板中的元素时，使该元素成为开始导航到某个路由的链接。导航会在页面上的 <code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code>\n位置上打开一个或多个路由组件。</p><p translation-origin=\"off\">When applied to an element in a template, makes that element a link\nthat initiates navigation to a route. Navigation opens one or more routed components\nin one or more <code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code> locations on the page.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterLinkActive\">RouterLinkActive</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">跟踪元素上的链接路由当前是否处于活动状态，并允许你指定一个或多个 CSS\n类，以便在链接路由处于活动状态时添加到该元素。</p><p translation-origin=\"off\">Tracks whether the linked route of an element is currently active, and allows you\nto specify one or more CSS classes to add to the element when the linked route\nis active.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterLinkWithHref\">RouterLinkWithHref</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">当应用于模板中的元素时，使该元素成为开始导航到某个路由的链接。导航会在页面上的 <code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code>\n位置上打开一个或多个路由组件。</p><p translation-origin=\"off\">When applied to an element in a template, makes that element a link\nthat initiates navigation to a route. Navigation opens one or more routed components\nin one or more <code>&lt;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>&gt;</code> locations on the page.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterOutlet\">RouterOutlet</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">一个占位符，Angular 会根据当前的路由器状态动态填充它。</p><p translation-origin=\"off\">Acts as a placeholder that Angular dynamically fills based on the current router state.</p>\n\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n  <section ng-should-translate=\"\" class=\"export-list\">\n    <h3 translation-result=\"on\" id=\"类型\">类型<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#类型\"><i class=\"material-icons\">link</i></a></h3>\n    <h3 translation-origin=\"off\" id=\"types\">Types<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router#types\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanActivateChildFn\">CanActivateChildFn</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canActivateChild</code> 保护的函数的签名。</p><p translation-origin=\"off\">The signature of a function used as a <code>canActivateChild</code> guard on a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanActivateFn\">CanActivateFn</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canActivate</code> 保护的函数的签名。</p><p translation-origin=\"off\">The signature of a function used as a <code>canActivate</code> guard on a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanDeactivateFn\">CanDeactivateFn</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canDeactivate</code> 保护的函数的签名。</p><p translation-origin=\"off\">The signature of a function used as a <code>canDeactivate</code> guard on a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/router/CanLoadFn\" class=\"deprecated-api-item\">CanLoadFn</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> Use <code><a href=\"api/router/Route#canMatch\" class=\"code-anchor\">Route.canMatch</a></code> and <code><a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a></code> instead</p>\n<p>改为使用 <code><a href=\"api/router/Route#canMatch\" class=\"code-anchor\">Route.canMatch</a></code> 和 <code><a href=\"api/router/CanMatchFn\" class=\"code-anchor\">CanMatchFn</a></code></p>\n\n          <p translation-result=\"on\">用作 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上的 <code>canLoad</code> 保护的函数的签名。</p><p translation-origin=\"off\">The signature of a function used as a <code>canLoad</code> guard on a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/CanMatchFn\">CanMatchFn</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 上用作 <code><a href=\"api/router/CanMatch\" class=\"code-anchor\">CanMatch</a></code> 保护的函数的签名。</p><p translation-origin=\"off\">The signature of a function used as a <code>canMatch</code> guard on a <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Data\">Data</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示与特定路由关联的静态数据。</p><p translation-origin=\"off\">Represents static data associated with a particular route.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DebugTracingFeature\">DebugTracingFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/withDebugTracing\" class=\"code-anchor\">withDebugTracing</a></code> 返回的提供程序的类型别名，与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withDebugTracing\" class=\"code-anchor\">withDebugTracing</a></code> for use with <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DeprecatedGuard\" class=\"deprecated-api-item\">DeprecatedGuard</a></code></td>\n        <td>\n          <p><strong>已弃用:</strong> </p>\n\n          <p translation-result=\"on\">守卫和解析器的 <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> 和 <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> 类已弃用，取而代之的是普通的 JavaScript 函数。依赖注入仍然可以使用来自 <code>@angular/core</code> <code>inject</code> 函数来实现，并且可注入类可以用作使用 <code>inject</code> 的功能守卫：<code>canActivate: [() =&gt; inject(myGuard).canActivate()]</code>。</p><p translation-origin=\"off\">The <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> and <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> classes for guards and resolvers are deprecated in favor\nof plain JavaScript functions instead.. Dependency injection can still be achieved using the\n<code>inject</code> function from <code>@angular/core</code> and an injectable class can be used as a functional guard\nusing <code>inject</code>: <code>canActivate: [() =&gt; inject(myGuard).canActivate()]</code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DetachedRouteHandle\">DetachedRouteHandle</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示已分离的路由树。</p><p translation-origin=\"off\">Represents the detached route tree.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/DisabledInitialNavigationFeature\">DisabledInitialNavigationFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> <code><a href=\"api/router/withDisabledInitialNavigation\" class=\"code-anchor\">withDisabledInitialNavigation</a></code> 使用。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withDisabledInitialNavigation\" class=\"code-anchor\">withDisabledInitialNavigation</a></code> for use with\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/EnabledBlockingInitialNavigationFeature\">EnabledBlockingInitialNavigationFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> <code><a href=\"api/router/withEnabledBlockingInitialNavigation\" class=\"code-anchor\">withEnabledBlockingInitialNavigation</a></code> 使用。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withEnabledBlockingInitialNavigation\" class=\"code-anchor\">withEnabledBlockingInitialNavigation</a></code> for use with\n<code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Event\">Event</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">路由器事件能让你跟踪路由器的生命周期。</p><p translation-origin=\"off\">Router events that allow you to track the lifecycle of the router.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InMemoryScrollingFeature\">InMemoryScrollingFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> <code><a href=\"api/router/withInMemoryScrolling\" class=\"code-anchor\">withInMemoryScrolling</a></code> 使用。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withInMemoryScrolling\" class=\"code-anchor\">withInMemoryScrolling</a></code> for use with <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InitialNavigation\">InitialNavigation</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">在路由器执行初始导航操作时配置的 <code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code> 对象中允许的值。</p><p translation-origin=\"off\">Allowed values in an <code><a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a></code> object that configure\nwhen the router performs the initial navigation operation.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/InitialNavigationFeature\">InitialNavigationFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">由 <code><a href=\"api/router/withEnabledBlockingInitialNavigation\" class=\"code-anchor\">withEnabledBlockingInitialNavigation</a></code> 或 <code><a href=\"api/router/withDisabledInitialNavigation\" class=\"code-anchor\">withDisabledInitialNavigation</a></code> 函数返回的提供程序的类型别名，与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withEnabledBlockingInitialNavigation\" class=\"code-anchor\">withEnabledBlockingInitialNavigation</a></code> or\n<code><a href=\"api/router/withDisabledInitialNavigation\" class=\"code-anchor\">withDisabledInitialNavigation</a></code> functions for use with <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/LoadChildren\">LoadChildren</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">返回一组要加载的路由的函数。</p><p translation-origin=\"off\">A function that returns a set of routes to load.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/LoadChildrenCallback\">LoadChildrenCallback</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">为解析惰性加载的路由集合而调用的函数。必须是以下形式的箭头函数：<code>() =&gt; import('...').then(mod =&gt; mod.MODULE)</code> 或 <code>() =&gt; import('...').then(mod =&gt; mod.ROUTES)</code></p><p translation-origin=\"off\">A function that is called to resolve a collection of lazy-loaded routes.\nMust be an arrow function of the following form:\n<code>() =&gt; import('...').then(mod =&gt; mod.MODULE)</code>\nor\n<code>() =&gt; import('...').then(mod =&gt; mod.ROUTES)</code></p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/NavigationErrorHandlerFeature\">NavigationErrorHandlerFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/withNavigationErrorHandler\" class=\"code-anchor\">withNavigationErrorHandler</a></code> 返回的提供者的类型别名，用于 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withNavigationErrorHandler\" class=\"code-anchor\">withNavigationErrorHandler</a></code> for use with <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/OnSameUrlNavigation\">OnSameUrlNavigation</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">定义当路由器收到一个导航到当前 URL 的请求时应该怎么做。可取下列值之一：</p><p translation-origin=\"off\">How to handle a navigation request to the current URL. One of:</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PRIMARY_OUTLET\">PRIMARY_OUTLET</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">主路由出口的名字。</p><p translation-origin=\"off\">The primary routing outlet.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Params\">Params</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">矩阵和查询 URL 参数的集合。</p><p translation-origin=\"off\">A collection of matrix and query URL parameters.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/PreloadingFeature\">PreloadingFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">一种类型别名，表示在 Router 中启用预加载的特性。该类型用于描述 <code><a href=\"api/router/withPreloading\" class=\"code-anchor\">withPreloading</a></code> 函数的返回值。</p><p translation-origin=\"off\">A type alias that represents a feature which enables preloading in Router.\nThe type is used to describe the return value of the <code><a href=\"api/router/withPreloading\" class=\"code-anchor\">withPreloading</a></code> function.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/QueryParamsHandling\">QueryParamsHandling</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">如何处理路由器链接中的查询参数。之一：</p><p translation-origin=\"off\">How to handle query parameters in a router link.\nOne of:</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ROUTER_CONFIGURATION\">ROUTER_CONFIGURATION</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">路由器服务的<a href=\"guide/glossary/#di-token\">DI 令牌</a>。</p><p translation-origin=\"off\">A <a href=\"guide/glossary/#di-token\">DI token</a> for the router service.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ROUTER_INITIALIZER\">ROUTER_INITIALIZER</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">一个代表路由器初始化器的令牌，应用引导完毕后就会调用它。</p><p translation-origin=\"off\">A <a href=\"guide/glossary/#di-token\">DI token</a> for the router initializer that\nis called after the app is bootstrapped.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ROUTES\">ROUTES</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">路由器配置的 <a href=\"guide/glossary/#di-token\">DI 令牌。</a></p><p translation-origin=\"off\">The <a href=\"guide/glossary/#di-token\">DI token</a> for a router configuration.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveData\">ResolveData</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示与特定路由关联的解析数据。</p><p translation-origin=\"off\">Represents the resolved data associated with a particular route.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/ResolveFn\">ResolveFn</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">数据提供者的函数类型定义。</p><p translation-origin=\"off\">Function type definition for a data provider.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterConfigurationFeature\">RouterConfigurationFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/withRouterConfig\" class=\"code-anchor\">withRouterConfig</a></code> 返回的提供程序的类型别名，与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withRouterConfig\" class=\"code-anchor\">withRouterConfig</a></code> for use with <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterFeatures\">RouterFeatures</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">一个类型别名，表示可与 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 一起使用的所有路由器特性。可以通过向 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 调用添加特殊函数来启用特性。请参阅每个符号的文档以查找对应的函数名称。有关如何使用这些函数，另请参阅 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> 文档。</p><p translation-origin=\"off\">A type alias that represents all Router features available for use with <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.\nFeatures can be enabled by adding special functions to the <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code> call.\nSee documentation for each symbol to find corresponding function name. See also <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>\ndocumentation on how to use those functions.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RouterHashLocationFeature\">RouterHashLocationFeature</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\"><code><a href=\"api/router/withHashLocation\" class=\"code-anchor\">withHashLocation</a></code> 返回的提供者的类型别名，用于 <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>。</p><p translation-origin=\"off\">A type alias for providers returned by <code><a href=\"api/router/withHashLocation\" class=\"code-anchor\">withHashLocation</a></code> for use with <code><a href=\"api/router/provideRouter\" class=\"code-anchor\">provideRouter</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/Routes\">Routes</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示 Router 服务的路由配置。<code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> 对象的数组，在 <code><a href=\"api/router/Route#children\" class=\"code-anchor\">Route.children</a></code> 中使用以及在 <code><a href=\"api/router/Router#config\" class=\"code-anchor\">Router.config</a></code> 中用于嵌套路由配置。</p><p translation-origin=\"off\">Represents a route configuration for the Router service.\nAn array of <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> objects, used in <code><a href=\"api/router/Router#config\" class=\"code-anchor\">Router.config</a></code> and for nested route configurations\nin <code><a href=\"api/router/Route#children\" class=\"code-anchor\">Route.children</a></code>.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/RunGuardsAndResolvers\">RunGuardsAndResolvers</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">何时在路由上运行警卫和解析器的策略。</p><p translation-origin=\"off\">A policy for when to run guards and resolvers on a route.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlMatchResult\">UrlMatchResult</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">表示使用自定义匹配函数匹配 URL 的结果。</p><p translation-origin=\"off\">Represents the result of matching URLs with a custom matching function.</p>\n\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/router/UrlMatcher\">UrlMatcher</a></code></td>\n        <td>\n          \n          <p translation-result=\"on\">将路由与 URL 匹配的函数。当 <code>path</code> 和 <code>pathMatch</code> 的组合没有足够的表现力时，为 <code><a href=\"api/router/Route#matcher\" class=\"code-anchor\">Route.matcher</a></code> 实现自定义 URL 匹配器。不能与 <code>path</code> 和 <code>pathMatch</code> 一起使用。</p><p translation-origin=\"off\">A function for matching a route against URLs. Implement a custom URL matcher\nfor <code><a href=\"api/router/Route#matcher\" class=\"code-anchor\">Route.matcher</a></code> when a combination of <code>path</code> and <code>pathMatch</code>\nis not expressive enough. Cannot be used together with <code>path</code> and <code>pathMatch</code>.</p>\n\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/ActivationEnd\n - api/router/ActivationStart\n - api/router/BaseRouteReuseStrategy\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanActivateChildFn\n - api/router/CanActivateFn\n - api/router/CanDeactivate\n - api/router/CanDeactivateFn\n - api/router/CanLoad\n - api/router/CanLoadFn\n - api/router/CanMatch\n - api/router/CanMatchFn\n - api/router/ChildActivationEnd\n - api/router/ChildActivationStart\n - api/router/ChildrenOutletContexts\n - api/router/Data\n - api/router/DebugTracingFeature\n - api/router/DefaultExport\n - api/router/DefaultTitleStrategy\n - api/router/DefaultUrlSerializer\n - api/router/DeprecatedGuard\n - api/router/DetachedRouteHandle\n - api/router/DisabledInitialNavigationFeature\n - api/router/EnabledBlockingInitialNavigationFeature\n - api/router/Event\n - api/router/EventType\n - api/router/ExtraOptions\n - api/router/GuardsCheckEnd\n - api/router/GuardsCheckStart\n - api/router/InMemoryScrollingFeature\n - api/router/InMemoryScrollingOptions\n - api/router/InitialNavigation\n - api/router/InitialNavigationFeature\n - api/router/IsActiveMatchOptions\n - api/router/LoadChildren\n - api/router/LoadChildrenCallback\n - api/router/Navigation\n - api/router/NavigationBehaviorOptions\n - api/router/NavigationCancel\n - api/router/NavigationCancellationCode\n - api/router/NavigationEnd\n - api/router/NavigationError\n - api/router/NavigationErrorHandlerFeature\n - api/router/NavigationExtras\n - api/router/NavigationSkipped\n - api/router/NavigationSkippedCode\n - api/router/NavigationStart\n - api/router/NoPreloading\n - api/router/OnSameUrlNavigation\n - api/router/OutletContext\n - api/router/PRIMARY_OUTLET\n - api/router/ParamMap\n - api/router/Params\n - api/router/PreloadAllModules\n - api/router/PreloadingFeature\n - api/router/PreloadingStrategy\n - api/router/QueryParamsHandling\n - api/router/ROUTER_CONFIGURATION\n - api/router/ROUTER_INITIALIZER\n - api/router/ROUTES\n - api/router/Resolve\n - api/router/ResolveData\n - api/router/ResolveEnd\n - api/router/ResolveFn\n - api/router/ResolveStart\n - api/router/Route\n - api/router/RouteConfigLoadEnd\n - api/router/RouteConfigLoadStart\n - api/router/RouteReuseStrategy\n - api/router/Router\n - api/router/RouterConfigOptions\n - api/router/RouterConfigurationFeature\n - api/router/RouterEvent\n - api/router/RouterFeature\n - api/router/RouterFeatures\n - api/router/RouterHashLocationFeature\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterLinkWithHref\n - api/router/RouterModule\n - api/router/RouterOutlet\n - api/router/RouterOutletContract\n - api/router/RouterPreloader\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/Routes\n - api/router/RoutesRecognized\n - api/router/RunGuardsAndResolvers\n - api/router/Scroll\n - api/router/TitleStrategy\n - api/router/UrlCreationOptions\n - api/router/UrlHandlingStrategy\n - api/router/UrlMatchResult\n - api/router/UrlMatcher\n - api/router/UrlSegment\n - api/router/UrlSegmentGroup\n - api/router/UrlSerializer\n - api/router/UrlTree\n - api/router/convertToParamMap\n - api/router/createUrlTreeFromSnapshot\n - api/router/defaultUrlMatcher\n - api/router/mapToCanActivate\n - api/router/mapToCanActivateChild\n - api/router/mapToCanDeactivate\n - api/router/mapToCanMatch\n - api/router/mapToResolve\n - api/router/provideRouter\n - api/router/provideRoutes\n - api/router/testing\n - api/router/testing/RouterTestingHarness\n - api/router/testing/RouterTestingModule\n - api/router/testing/setupTestingRouter\n - api/router/upgrade\n - api/router/upgrade/RouterUpgradeInitializer\n - api/router/upgrade/locationSyncBootstrapListener\n - api/router/upgrade/setUpLocationSync\n - api/router/withComponentInputBinding\n - api/router/withDebugTracing\n - api/router/withDisabledInitialNavigation\n - api/router/withEnabledBlockingInitialNavigation\n - api/router/withHashLocation\n - api/router/withInMemoryScrolling\n - api/router/withNavigationErrorHandler\n - api/router/withPreloading\n - api/router/withRouterConfig\n - guide/npm-packages\n - guide/router-tutorial\n - guide/routing-with-urlmatcher\n-->\n<!-- links from this doc:\n - /api\n - api/core/Injectable\n - api/core/InjectionToken\n - api/platform-browser/Title\n - api/router#\n - api/router#angularrouter\n - api/router#classes\n - api/router#directives\n - api/router#entry-points\n - api/router#functions\n - api/router#ngmodules\n - api/router#primary\n - api/router#primary-entry-point-exports\n - api/router#secondary\n - api/router#structures\n - api/router#types\n - api/router#主要\n - api/router#主要入口点的导出\n - api/router#入口点\n - api/router#函数\n - api/router#指令\n - api/router#次要\n - api/router#类\n - api/router#类型\n - api/router#结构\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/ActivationEnd\n - api/router/ActivationStart\n - api/router/BaseRouteReuseStrategy\n - api/router/CanActivate\n - api/router/CanActivateChild\n - api/router/CanActivateChildFn\n - api/router/CanActivateFn\n - api/router/CanDeactivate\n - api/router/CanDeactivateFn\n - api/router/CanLoad\n - api/router/CanLoadFn\n - api/router/CanMatch\n - api/router/CanMatchFn\n - api/router/ChildActivationEnd\n - api/router/ChildActivationStart\n - api/router/ChildrenOutletContexts\n - api/router/Data\n - api/router/DebugTracingFeature\n - api/router/DefaultExport\n - api/router/DefaultTitleStrategy\n - api/router/DefaultUrlSerializer\n - api/router/DeprecatedGuard\n - api/router/DetachedRouteHandle\n - api/router/DisabledInitialNavigationFeature\n - api/router/EnabledBlockingInitialNavigationFeature\n - api/router/Event\n - api/router/EventType\n - api/router/ExtraOptions\n - api/router/GuardsCheckEnd\n - api/router/GuardsCheckStart\n - api/router/InMemoryScrollingFeature\n - api/router/InMemoryScrollingOptions\n - api/router/InitialNavigation\n - api/router/InitialNavigationFeature\n - api/router/IsActiveMatchOptions\n - api/router/LoadChildren\n - api/router/LoadChildrenCallback\n - api/router/Navigation\n - api/router/NavigationBehaviorOptions\n - api/router/NavigationCancel\n - api/router/NavigationCancellationCode\n - api/router/NavigationEnd\n - api/router/NavigationError\n - api/router/NavigationErrorHandlerFeature\n - api/router/NavigationExtras\n - api/router/NavigationSkipped\n - api/router/NavigationSkippedCode\n - api/router/NavigationStart\n - api/router/NoPreloading\n - api/router/OnSameUrlNavigation\n - api/router/OutletContext\n - api/router/PRIMARY_OUTLET\n - api/router/ParamMap\n - api/router/Params\n - api/router/PreloadAllModules\n - api/router/PreloadingFeature\n - api/router/PreloadingStrategy\n - api/router/QueryParamsHandling\n - api/router/ROUTER_CONFIGURATION\n - api/router/ROUTER_INITIALIZER\n - api/router/ROUTES\n - api/router/Resolve\n - api/router/ResolveData\n - api/router/ResolveEnd\n - api/router/ResolveFn\n - api/router/ResolveStart\n - api/router/Route\n - api/router/Route#canMatch\n - api/router/Route#children\n - api/router/Route#matcher\n - api/router/RouteConfigLoadEnd\n - api/router/RouteConfigLoadStart\n - api/router/RouteReuseStrategy\n - api/router/Router\n - api/router/Router#config\n - api/router/Router#getcurrentnavigation\n - api/router/RouterConfigOptions\n - api/router/RouterConfigurationFeature\n - api/router/RouterEvent\n - api/router/RouterFeature\n - api/router/RouterFeatures\n - api/router/RouterHashLocationFeature\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterLinkWithHref\n - api/router/RouterModule\n - api/router/RouterOutlet\n - api/router/RouterOutletContract\n - api/router/RouterPreloader\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/Routes\n - api/router/RoutesRecognized\n - api/router/RunGuardsAndResolvers\n - api/router/Scroll\n - api/router/TitleStrategy\n - api/router/UrlCreationOptions\n - api/router/UrlHandlingStrategy\n - api/router/UrlMatchResult\n - api/router/UrlMatcher\n - api/router/UrlSegment\n - api/router/UrlSegmentGroup\n - api/router/UrlSerializer\n - api/router/UrlTree\n - api/router/convertToParamMap\n - api/router/createUrlTreeFromSnapshot\n - api/router/defaultUrlMatcher\n - api/router/mapToCanActivate\n - api/router/mapToCanActivateChild\n - api/router/mapToCanDeactivate\n - api/router/mapToCanMatch\n - api/router/mapToResolve\n - api/router/provideRouter\n - api/router/provideRoutes\n - api/router/testing\n - api/router/upgrade\n - api/router/withComponentInputBinding\n - api/router/withDebugTracing\n - api/router/withDisabledInitialNavigation\n - api/router/withEnabledBlockingInitialNavigation\n - api/router/withHashLocation\n - api/router/withInMemoryScrolling\n - api/router/withNavigationErrorHandler\n - api/router/withPreloading\n - api/router/withRouterConfig\n - guide/glossary#provider\n - guide/glossary/#di-token\n - guide/router\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/router/PACKAGE.md?message=docs(...)%3A%20请简述你的修改...\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/router/PACKAGE.md\n-->"}