{"id":"api/core/Component","title":"Component","contents":"<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/Component\", \"name\": \"Component\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> &gt; <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L944-L945\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L944-L945\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header ng-should-translate=\"\" class=\"api-header\">\n    <h1 id=\"component\">Component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#component\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section ng-should-translate=\"\" class=\"short-description\">\n    <p translation-result=\"on\">一个装饰器，用于把某个类标记为 Angular 组件，并为它配置一些元数据，以决定该组件在运行期间该如何处理、实例化和使用。</p><p translation-origin=\"off\">Decorator that marks a class as an Angular component and provides configuration\nmetadata that determines how the component should be processed,\ninstantiated, and used at runtime.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/core/Component#description\">查看\"说明\"...</a></p>\n  </section>\n<section ng-should-translate=\"\" class=\"decorator-overview\">\n  <table class=\"is-full-width list-table option-overview\">\n  <thead>\n    <tr><th>选项</th><th>说明</th></tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#changeDetection\">\n          <code>changeDetection?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">用于当前组件的变更检测策略。</p><p translation-origin=\"off\">The change-detection strategy to use for this component.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#viewProviders\">\n          <code>viewProviders?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">定义对其视图 DOM 子级可见的可注入对象集。请参见<a href=\"api/core/Component#injecting-a-class-with-a-view-provider\">示例</a>。</p><p translation-origin=\"off\">Defines the set of injectable objects that are visible to its view DOM children.\nSee <a href=\"api/core/Component#injecting-a-class-with-a-view-provider\">example</a>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#moduleId\">\n          <code>moduleId?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">包含该组件的那个模块的 ID。该组件必须能解析模板和样式表中使用的相对 URL。SystemJS 在每个模块中都导出了 <code>__moduleName</code> 变量。在 CommonJS 中，它可以设置为 <code>module.id</code>。</p><p translation-origin=\"off\">The module ID of the module that contains the component.\nThe component must be able to resolve relative URLs for templates and styles.\nSystemJS exposes the <code>__moduleName</code> variable within each module.\nIn CommonJS, this can  be set to <code>module.id</code>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#templateUrl\">\n          <code>templateUrl?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">Angular 组件模板文件的 URL。如果提供了它，就不要再用 <code>template</code> 来提供内联模板了。</p><p translation-origin=\"off\">The relative path or absolute URL of a template file for an Angular component.\nIf provided, do not supply an inline template using <code>template</code>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#template\">\n          <code>template?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">Angular 组件的内联模板。如果提供了它，就不要再用 <code>templateUrl</code> 提供模板了。</p><p translation-origin=\"off\">An inline template for an Angular component. If provided,\ndo not supply a template file using <code>templateUrl</code>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#styleUrls\">\n          <code>styleUrls?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">一个或多个 URL，指向包含本组件 CSS 样式表的文件。</p><p translation-origin=\"off\">One or more relative paths or absolute URLs for files containing CSS stylesheets to use\nin this component.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#styles\">\n          <code>styles?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">本组件用到的一个或多个内联 CSS 样式。</p><p translation-origin=\"off\">One or more inline CSS stylesheets to use\nin this component.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#animations\">\n          <code>animations?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">一个或多个动画 <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> 调用，包含一些 <code>state()</code> 和 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 定义。参见<a href=\"/guide/animations\">动画</a>和相关的 API 文档。</p><p translation-origin=\"off\">One or more animation <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> calls, containing\n<a href=\"api/animations/state\"><code>state()</code></a> and <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> definitions.\nSee the <a href=\"/guide/animations\">Animations guide</a> and animations API documentation.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#encapsulation\">\n          <code>encapsulation?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">供模板和 CSS 样式使用的样式封装策略。取值为：</p><p translation-origin=\"off\">An encapsulation policy for the component's styling.\nPossible values:</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#interpolation\">\n          <code>interpolation?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">改写默认的插值表达式起止分界符（<code>{{</code> 和 <code>}}</code>）。</p><p translation-origin=\"off\">Overrides the default interpolation start and end delimiters (<code>{{</code> and <code>}}</code>).</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#preserveWhitespaces\">\n          <code>preserveWhitespaces?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">为 <code>true</code> 则保留，为 <code>false</code> 则从编译后的模板中移除可能多余的空白字符。空白字符就是指那些能在 JavaScript 正则表达式中匹配 <code>\\s</code> 的字符。默认为 <code>false</code>，除非通过编译器选项改写了它。</p><p translation-origin=\"off\">True to preserve or false to remove potentially superfluous whitespace characters\nfrom the compiled template. Whitespace characters are those matching the <code>\\s</code>\ncharacter class in JavaScript regular expressions. Default is false, unless\noverridden in compiler options.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#standalone\">\n          <code>standalone?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">标记为 <code>standalone</code> 的 Angular 组件不需要在 NgModule 中声明。此类组件通过 imports 属性直接管理它们自己的模板依赖项（模板中使用的组件、指令和管道）。</p><p translation-origin=\"off\">Angular components marked as <code>standalone</code> do not need to be declared in an NgModule. Such\ncomponents directly manage their own template dependencies (components, directives, and pipes\nused in a template) via the imports property.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#signals\">\n          <code>signals?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">// TODO(signals): 删除内部文档并添加公共文档。</p><p translation-origin=\"off\">// TODO(signals): Remove internal and add public documentation.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#imports\">\n          <code>imports?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">imports 属性指定独立组件的模板依赖项——那些可以在其模板中使用的指令、组件和管道。独立组件可以导入其他独立组件、指令和管道以及现有的 NgModule。</p><p translation-origin=\"off\">The imports property specifies the standalone component's template dependencies — those\ndirectives, components, and pipes that can be used within its template. Standalone components\ncan import other standalone components, directives, and pipes as well as existing NgModules.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Component#schemas\">\n          <code>schemas?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">声明要在独立组件中允许的元素的模式集。既不是 Angular 组件也不是指令的元素和属性必须在模式中声明。</p><p translation-origin=\"off\">The set of schemas that declare elements to be allowed in a standalone component. Elements and\nproperties that are neither Angular components nor directives must be declared in a schema.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h3 class=\"no-toc\" id=\"继承自-directive-装饰器\">继承自 <a class=\"code-anchor\" href=\"api/core/Directive\">Directive</a> 装饰器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#继承自-directive-装饰器\"><i class=\"material-icons\">link</i></a></h3>\n<table class=\"is-full-width list-table option-overview\">\n  <thead>\n    <tr><th>选项</th><th>说明</th></tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#selector\">\n          <code>selector?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">这个 CSS 选择器用于在模板中标记出该指令，并触发该指令的实例化。</p><p translation-origin=\"off\">The CSS selector that identifies this directive in a template\nand triggers instantiation of the directive.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#inputs\">\n          <code>inputs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">列举某个指令的一组可供数据绑定的输入属性</p><p translation-origin=\"off\">Enumerates the set of data-bound input properties for a directive</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#outputs\">\n          <code>outputs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">列举一组可供事件绑定的输出属性。</p><p translation-origin=\"off\">Enumerates the set of event-bound output properties.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#providers\">\n          <code>providers?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">一组依赖注入令牌，它允许 DI 系统为这个指令或组件提供依赖。</p><p translation-origin=\"off\">Configures the <a href=\"guide/glossary#injector\">injector</a> of this\ndirective or component with a <a href=\"guide/glossary#di-token\">token</a>\nthat maps to a <a href=\"guide/glossary#provider\">provider</a> of a dependency.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#exportAs\">\n          <code>exportAs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">定义一个名字，用于在模板中把该指令赋值给一个变量。</p><p translation-origin=\"off\">Defines the name that can be used in the template to assign this directive to a variable.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#queries\">\n          <code>queries?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">配置一些查询，它们将被注入到该指令中。</p><p translation-origin=\"off\">Configures the queries that will be injected into the directive.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#host\">\n          <code>host?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">使用一组键-值对，把类的属性映射到宿主元素的绑定（Property、Attribute 和事件）。</p><p translation-origin=\"off\">Maps class properties to host element bindings for properties,\nattributes, and events, using a set of key-value pairs.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#jit\">\n          <code>jit?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">如果存在，则该指令/组件将被 AOT 编译器忽略。它会保留在发布代码中，并且 JIT 编译器会尝试在运行时在浏览器中对其进行编译。为了确保其行为正确，该应用程序必须导入 <code>@angular/compiler</code>。</p><p translation-origin=\"off\">When present, this directive/component is ignored by the AOT compiler.\nIt remains in distributed code, and the JIT compiler attempts to compile it\nat run time, in the browser.\nTo ensure the correct behavior, the app must import <code>@angular/compiler</code>.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#standalone\">\n          <code>standalone?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">标记为 <code>standalone</code> 的 Angular 指令不需要在 NgModule 中声明。此类指令不依赖于 NgModule 的任何“中间上下文”（例如配置的提供程序）。</p><p translation-origin=\"off\">Angular directives marked as <code>standalone</code> do not need to be declared in an NgModule. Such\ndirectives don't depend on any \"intermediate context\" of an NgModule (ex. configured\nproviders).</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#signals\">\n          <code>signals?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">// TODO(signals): 删除内部文档并添加公共文档</p><p translation-origin=\"off\">// TODO(signals): Remove internal and add public documentation</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#hostDirectives\">\n          <code>hostDirectives?</code>\n        </a>\n      </td>\n      <td>\n\n        <p translation-result=\"on\">指令匹配时应该应用于宿主的独立指令。默认情况下，host 指令的任何输入或输出在宿主上都不可用，除非它们在 <code>inputs</code> 或 <code>outputs</code> 属性中指定。</p><p translation-origin=\"off\">Standalone directives that should be applied to the host whenever the directive is matched.\nBy default, none of the inputs or outputs of the host directives will be available on the host,\nunless they are specified in the <code>inputs</code> or <code>outputs</code> properties.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n</section>\n\n<section ng-should-translate=\"\" class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">注意，除了这些用来对指令进行配置的选项之外，你还可以通过实现生命周期钩子来控制组件的运行期行为。要了解更多，参见 <a href=\"guide/lifecycle-hooks\">生命周期钩子</a> 章。</p><p translation-origin=\"off\">Components are the most basic UI building block of an Angular app.\nAn Angular app contains a tree of Angular components.</p>\n\n<p translation-result=\"on\">Angular 的组件是指令的一个子集，它总是有一个与之关联的模板。和其它指令不同，模板中的每个元素只能具有一个组件实例。</p><p translation-origin=\"off\">Angular components are a subset of directives, always associated with a template.\nUnlike other directives, only one component can be instantiated for a given element in a\ntemplate.</p>\n\n<p translation-result=\"on\">组件必须从属于某个 NgModule 才能被其它组件或应用使用。要想让它成为某个 NgModule 中的一员，请把它列在 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 元数据的 <code>declarations</code> 字段中。</p><p translation-origin=\"off\">A component must belong to an NgModule in order for it to be available\nto another component or application. To make it a member of an NgModule,\nlist it in the <code>declarations</code> field of the <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> metadata.</p>\n\n<p translation-result=\"on\">注意，除了这些用来对指令进行配置的选项之外，你还可以通过实现生命周期钩子来控制组件的运行期行为。要了解更多，参见 <a href=\"guide/lifecycle-hooks\">生命周期钩子</a> 章。</p><p translation-origin=\"off\">Note that, in addition to these options for configuring a directive,\nyou can control a component's runtime behavior by implementing\nlife-cycle hooks. For more information, see the\n<a href=\"guide/lifecycle-hooks\">Lifecycle Hooks</a> guide.</p>\n\n  <p>Further information is available in the <a href=\"api/core/Component#usage-notes\">Usage Notes...</a></p>\n</section>\n\n<section ng-should-translate=\"\" class=\"decorator-options\">\n  <h2 id=\"options\">选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n  <a id=\"changeDetection\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"changedetection\">changeDetection<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#changedetection\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L725-L745\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L725-L745\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">用于当前组件的变更检测策略。</p><p translation-origin=\"off\">The change-detection strategy to use for this component.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            changeDetection?: <a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p translation-result=\"on\">当组件实例化之后，Angular 就会创建一个变更检测器，它负责传播组件各个绑定值的变化。该策略是下列值之一：</p><p translation-origin=\"off\">When a component is instantiated, Angular creates a change detector,\nwhich is responsible for propagating the component's bindings.\nThe strategy is one of:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>#OnPush</code> 把策略设置为 <code>CheckOnce</code>（按需）。</p><p translation-origin=\"off\"><code><a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>#OnPush</code> sets the strategy to <code>CheckOnce</code> (on demand).</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>#Default</code> 把策略设置为 <code>CheckAlways</code>。</p><p translation-origin=\"off\"><code><a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a>#Default</code> sets the strategy to <code>CheckAlways</code>.</p>\n\n</li>\n</ul>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"viewProviders\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"viewproviders\">viewProviders<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#viewproviders\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L746-L754\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L746-L754\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">定义对其视图 DOM 子级可见的可注入对象集。请参见<a href=\"api/core/Component#injecting-a-class-with-a-view-provider\">示例</a>。</p><p translation-origin=\"off\">Defines the set of injectable objects that are visible to its view DOM children.\nSee <a href=\"api/core/Component#injecting-a-class-with-a-view-provider\">example</a>.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            viewProviders?: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"moduleId\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"moduleid\">moduleId<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#moduleid\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L755-L771\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L755-L771\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">包含该组件的那个模块的 ID。该组件必须能解析模板和样式表中使用的相对 URL。SystemJS 在每个模块中都导出了 <code>__moduleName</code> 变量。在 CommonJS 中，它可以设置为 <code>module.id</code>。</p><p translation-origin=\"off\">The module ID of the module that contains the component.\nThe component must be able to resolve relative URLs for templates and styles.\nSystemJS exposes the <code>__moduleName</code> variable within each module.\nIn CommonJS, this can  be set to <code>module.id</code>.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\">\n            moduleId?: string\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"templateUrl\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"templateurl\">templateUrl<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#templateurl\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L772-L780\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L772-L780\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">Angular 组件模板文件的 URL。如果提供了它，就不要再用 <code>template</code> 来提供内联模板了。</p><p translation-origin=\"off\">The relative path or absolute URL of a template file for an Angular component.\nIf provided, do not supply an inline template using <code>template</code>.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            templateUrl?: string\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"template\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"template\">template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#template\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L781-L789\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L781-L789\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">Angular 组件的内联模板。如果提供了它，就不要再用 <code>templateUrl</code> 提供模板了。</p><p translation-origin=\"off\">An inline template for an Angular component. If provided,\ndo not supply a template file using <code>templateUrl</code>.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            template?: string\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"styleUrls\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"styleurls\">styleUrls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#styleurls\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L790-L798\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L790-L798\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">一个或多个 URL，指向包含本组件 CSS 样式表的文件。</p><p translation-origin=\"off\">One or more relative paths or absolute URLs for files containing CSS stylesheets to use\nin this component.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            styleUrls?: string[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"styles\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"styles\">styles<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#styles\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L799-L807\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L799-L807\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">本组件用到的一个或多个内联 CSS 样式。</p><p translation-origin=\"off\">One or more inline CSS stylesheets to use\nin this component.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            styles?: string[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"animations\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"animations\">animations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#animations\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L808-L817\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L808-L817\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">一个或多个动画 <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> 调用，包含一些 <code>state()</code> 和 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 定义。参见<a href=\"/guide/animations\">动画</a>和相关的 API 文档。</p><p translation-origin=\"off\">One or more animation <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>()</code> calls, containing\n<a href=\"api/animations/state\"><code>state()</code></a> and <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> definitions.\nSee the <a href=\"/guide/animations\">Animations guide</a> and animations API documentation.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            animations?: any[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"encapsulation\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"encapsulation\">encapsulation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#encapsulation\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L818-L850\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L818-L850\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">供模板和 CSS 样式使用的样式封装策略。取值为：</p><p translation-origin=\"off\">An encapsulation policy for the component's styling.\nPossible values:</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            encapsulation?: <a href=\"api/core/ViewEncapsulation\" class=\"code-anchor\">ViewEncapsulation</a>\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <ul>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>：使用垫片（shimmed) CSS 来模拟原生行为。</p><p translation-origin=\"off\"><code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>: Apply modified component styles in order to emulate\na native Shadow DOM CSS encapsulation behavior.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>：使用不带任何封装的全局 CSS。</p><p translation-origin=\"off\"><code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>: Apply component styles globally without any sort of encapsulation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code><a href=\"api/core/ViewEncapsulation#ShadowDom\" class=\"code-anchor\">ViewEncapsulation.ShadowDom</a></code>：使用 Shadow DOM v1，封装样式。</p><p translation-origin=\"off\"><code><a href=\"api/core/ViewEncapsulation#ShadowDom\" class=\"code-anchor\">ViewEncapsulation.ShadowDom</a></code>: Use the browser's native Shadow DOM API to encapsulate styles.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">如果没有提供，该值就会从 <code><a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a></code> 中获取它。默认的编译器选项是 <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>。</p><p translation-origin=\"off\">If not supplied, the value is taken from the <code><a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a></code>\nwhich defaults to <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>.</p>\n\n<p translation-result=\"on\">如果策略是 <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code> 并且组件没有 <a href=\"api/core/Component#styles\">styles</a> 也没有 <a href=\"api/core/Component#styleUrls\">styleUrls</a>，策略会自动切换到 <code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>。</p><p translation-origin=\"off\">If the policy is <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code> and the component has no\n<a href=\"api/core/Component#styles\">styles</a> nor <a href=\"api/core/Component#styleUrls\">styleUrls</a>,\nthe policy is automatically switched to <code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>.</p>\n\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"interpolation\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"interpolation\">interpolation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#interpolation\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L851-L858\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L851-L858\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">改写默认的插值表达式起止分界符（<code>{{</code> 和 <code>}}</code>）。</p><p translation-origin=\"off\">Overrides the default interpolation start and end delimiters (<code>{{</code> and <code>}}</code>).</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            interpolation?: [\n    string,\n    string\n]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"preserveWhitespaces\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"preservewhitespaces\">preserveWhitespaces<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#preservewhitespaces\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L859-L869\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L859-L869\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">为 <code>true</code> 则保留，为 <code>false</code> 则从编译后的模板中移除可能多余的空白字符。空白字符就是指那些能在 JavaScript 正则表达式中匹配 <code>\\s</code> 的字符。默认为 <code>false</code>，除非通过编译器选项改写了它。</p><p translation-origin=\"off\">True to preserve or false to remove potentially superfluous whitespace characters\nfrom the compiled template. Whitespace characters are those matching the <code>\\s</code>\ncharacter class in JavaScript regular expressions. Default is false, unless\noverridden in compiler options.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            preserveWhitespaces?: boolean\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"standalone\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"standalone\">standalone<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#standalone\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L870-L884\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L870-L884\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">标记为 <code>standalone</code> 的 Angular 组件不需要在 NgModule 中声明。此类组件通过 imports 属性直接管理它们自己的模板依赖项（模板中使用的组件、指令和管道）。</p><p translation-origin=\"off\">Angular components marked as <code>standalone</code> do not need to be declared in an NgModule. Such\ncomponents directly manage their own template dependencies (components, directives, and pipes\nused in a template) via the imports property.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            standalone?: boolean\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p translation-result=\"on\">有关独立组件、指令和管道的更多信息，请参阅<a href=\"guide/standalone-components\">本指南</a>。</p><p translation-origin=\"off\">More information about standalone components, directives, and pipes can be found in <a href=\"guide/standalone-components\">this\nguide</a>.</p>\n\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"signals\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"signals\">signals<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#signals\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L885-L893\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L885-L893\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">// TODO(signals): 删除内部文档并添加公共文档。</p><p translation-origin=\"off\">// TODO(signals): Remove internal and add public documentation.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            signals?: boolean\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"imports\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"imports\">imports<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#imports\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L894-L913\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L894-L913\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">imports 属性指定独立组件的模板依赖项——那些可以在其模板中使用的指令、组件和管道。独立组件可以导入其他独立组件、指令和管道以及现有的 NgModule。</p><p translation-origin=\"off\">The imports property specifies the standalone component's template dependencies — those\ndirectives, components, and pipes that can be used within its template. Standalone components\ncan import other standalone components, directives, and pipes as well as existing NgModules.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            imports?: (<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&lt;any&gt; | ReadonlyArray&lt;any&gt;)[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p translation-result=\"on\">此属性仅适用于独立组件 - 为 NgModule 中声明的组件指定它会生成编译错误。</p><p translation-origin=\"off\">This property is only available for standalone components - specifying it for components\ndeclared in an NgModule generates a compilation error.</p>\n\n<p translation-result=\"on\">有关独立组件、指令和管道的更多信息，请参阅<a href=\"guide/standalone-components\">本指南</a>。</p><p translation-origin=\"off\">More information about standalone components, directives, and pipes can be found in <a href=\"guide/standalone-components\">this\nguide</a>.</p>\n\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"schemas\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"schemas\">schemas<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#schemas\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L914-L932\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L914-L932\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p translation-result=\"on\">声明要在独立组件中允许的元素的模式集。既不是 Angular 组件也不是指令的元素和属性必须在模式中声明。</p><p translation-origin=\"off\">The set of schemas that declare elements to be allowed in a standalone component. Elements and\nproperties that are neither Angular components nor directives must be declared in a schema.</p>\n\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            schemas?: <a href=\"api/core/SchemaMetadata\" class=\"code-anchor\">SchemaMetadata</a>[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p translation-result=\"on\">此属性仅适用于独立组件 - 为 NgModule 中声明的组件指定它会生成编译错误。</p><p translation-origin=\"off\">This property is only available for standalone components - specifying it for components\ndeclared in an NgModule generates a compilation error.</p>\n\n<p translation-result=\"on\">有关独立组件、指令和管道的更多信息，请参阅<a href=\"guide/standalone-components\">本指南</a>。</p><p translation-origin=\"off\">More information about standalone components, directives, and pipes can be found in <a href=\"guide/standalone-components\">this\nguide</a>.</p>\n\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n</section>\n\n<section ng-should-translate=\"\" class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"setting-component-inputs\" translation-result=\"on\">设置组件的输入属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#setting-component-inputs\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Setting component inputs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#setting-component-inputs\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">下免得例子创建了一个带有两个数据绑定属性的组件，它是通过 <code>inputs</code> 值来指定的。</p><p translation-origin=\"off\">The following example creates a component with two data-bound properties,\nspecified by the <code>inputs</code> value.</p>\n\n<code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-bank-account',\n  inputs: ['bankName', 'id: account-id'],\n  template: `\n    Bank Name: {{ bankName }}\n    Account Id: {{ id }}\n  `\n})\nexport class BankAccountComponent {\n  bankName: string|null = null;\n  id: string|null = null;\n\n  // this property is not bound, and won't be automatically updated by Angular\n  normalizedBankName: string|null = null;\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-my-input',\n  template: `\n    &lt;app-bank-account\n      bankName=\"RBC\"\n      account-id=\"4747\"&gt;\n    &lt;/app-bank-account&gt;\n  `\n})\nexport class MyInputComponent {\n}\n\n</code-example>\n<h3 id=\"setting-component-outputs\" translation-result=\"on\">设置组件的输出属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#setting-component-outputs\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Setting component outputs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#setting-component-outputs\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">下面的例子展示了两个事件发生器，它们定时发出事件。一个每隔一秒发出一个输出事件，另一个则隔五秒。</p><p translation-origin=\"off\">The following example shows two event emitters that emit on an interval. One\nemits an output every second, while the other emits every five seconds.</p>\n\n<code-example path=\"core/ts/metadata/directives.ts\" region=\"component-output-interval\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'app-interval-dir', outputs: ['everySecond', 'fiveSecs: everyFiveSeconds']})\nexport class IntervalDirComponent {\n  everySecond = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;string&gt;();\n  fiveSecs = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&lt;string&gt;();\n\n  constructor() {\n    setInterval(() =&gt; this.everySecond.emit('event'), 1000);\n    setInterval(() =&gt; this.fiveSecs.emit('event'), 5000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-my-output',\n  template: `\n    &lt;app-interval-dir\n      (everySecond)=\"onEverySecond()\"\n      (everyFiveSeconds)=\"onEveryFiveSeconds()\"&gt;\n    &lt;/app-interval-dir&gt;\n  `\n})\nexport class MyOutputComponent {\n  onEverySecond() {\n    console.log('second');\n  }\n  onEveryFiveSeconds() {\n    console.log('five seconds');\n  }\n}\n\n</code-example>\n<h3 id=\"injecting-a-class-with-a-view-provider\" translation-result=\"on\">使用视图提供者注入一个类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#injecting-a-class-with-a-view-provider\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Injecting a class with a view provider<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#injecting-a-class-with-a-view-provider\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">下面的例子示范了如何在组件元数据中使用视图提供者来把一个类注入到组件中：</p><p translation-origin=\"off\">The following simple example injects a class into a component\nusing the view provider specified in component metadata:</p>\n\n<code-example language=\"ts\">\nclass Greeter {\n   greet(name:string) {\n     return 'Hello ' + name + '!';\n   }\n}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'needs-greeter'\n})\nclass NeedsGreeter {\n  greeter:Greeter;\n\n  constructor(greeter:Greeter) {\n    this.greeter = greeter;\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'greet',\n  viewProviders: [\n    Greeter\n  ],\n  template: `&lt;needs-greeter&gt;&lt;/needs-greeter&gt;`\n})\nclass HelloWorld {\n}\n</code-example>\n<h3 id=\"preserving-whitespace\" translation-result=\"on\">保留空格<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#preserving-whitespace\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\">Preserving whitespace<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#preserving-whitespace\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">删除空格可以大大减少 AOT 生成的代码大小并加快视图创建。从 Angular 6 开始，<code>preserveWhitespaces</code> 的默认值为 false（删除空格）。要更改应用程序中所有组件的默认设置，请设置 AOT 编译器的 <code>preserveWhitespaces</code> 选项。</p><p translation-origin=\"off\">Removing whitespace can greatly reduce AOT-generated code size and speed up view creation.\nAs of Angular 6, the default for <code>preserveWhitespaces</code> is false (whitespace is removed).\nTo change the default setting for all components in your application, set\nthe <code>preserveWhitespaces</code> option of the AOT compiler.</p>\n\n<p translation-result=\"on\">默认情况下，AOT 编译器会删除空白字符，如下所示：</p><p translation-origin=\"off\">By default, the AOT compiler removes whitespace characters as follows:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">修剪模板开头和结尾的所有空格。</p><p translation-origin=\"off\">Trims all whitespaces at the beginning and the end of a template.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">删除只有空白的文本节点。例如，</p><p translation-origin=\"off\">Removes whitespace-only text nodes. For example,</p>\n\n</li>\n</ul>\n<code-example language=\"html\">\n&lt;button&gt;Action 1&lt;/button&gt;  &lt;button&gt;Action 2&lt;/button&gt;\n</code-example>\n<p translation-result=\"on\">变成：</p><p translation-origin=\"off\">becomes:</p>\n\n<code-example language=\"html\">\n&lt;button&gt;Action 1&lt;/button&gt;&lt;button&gt;Action 2&lt;/button&gt;\n</code-example>\n<ul>\n<li>\n<p translation-result=\"on\">用单个空格替换文本节点中的一系列空白字符。例如，<code>&lt;span&gt;\\n some text\\n&lt;/span&gt;</code> 变成了 <code>&lt;span&gt; some text &lt;/span&gt;</code>。</p><p translation-origin=\"off\">Replaces a series of whitespace characters in text nodes with a single space.\nFor example, <code>&lt;span&gt;\\n some text\\n&lt;/span&gt;</code> becomes <code>&lt;span&gt; some text &lt;/span&gt;</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">不改变 HTML 标签内的文本节点，例如 <code>&lt;pre&gt;</code> 或 <code>&lt;<a href=\"api/forms/DefaultValueAccessor\" class=\"code-anchor\">textarea</a>&gt;</code>，其中空白字符很重要。</p><p translation-origin=\"off\">Does NOT alter text nodes inside HTML tags such as <code>&lt;pre&gt;</code> or <code>&lt;<a href=\"api/forms/DefaultValueAccessor\" class=\"code-anchor\">textarea</a>&gt;</code>,\nwhere whitespace characters are significant.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">请注意，这些转换会影响 DOM 节点布局，尽管影响应该很小。</p><p translation-origin=\"off\">Note that these transformations can influence DOM nodes layout, although impact\nshould be minimal.</p>\n\n<p translation-result=\"on\">你可以覆盖默认行为以在模板的某些片段中保留空白字符。例如，你可以使用 <code>ngPreserveWhitespaces</code> 属性排除整个 DOM 子树：</p><p translation-origin=\"off\">You can override the default behavior to preserve whitespace characters\nin certain fragments of a template. For example, you can exclude an entire\nDOM sub-tree by using the <code>ngPreserveWhitespaces</code> attribute:</p>\n\n<code-example language=\"html\">\n&lt;div ngPreserveWhitespaces&gt;\n    whitespaces are preserved here\n    &lt;span&gt;    and here &lt;/span&gt;\n&lt;/div&gt;\n</code-example>\n<p translation-result=\"on\">你可以使用 <code>&amp;ngsp;</code>，它被 Angular 的模板编译器替换为空格字符：</p><p translation-origin=\"off\">You can force a single space to be preserved in a text node by using <code>&amp;ngsp;</code>,\nwhich is replaced with a space character by Angular's template\ncompiler:</p>\n\n<code-example language=\"html\">\n&lt;a&gt;Spaces&lt;/a&gt;&amp;ngsp;&lt;a&gt;between&lt;/a&gt;&amp;ngsp;&lt;a&gt;links.&lt;/a&gt;\n&lt;!-- compiled to be equivalent to:\n &lt;a&gt;Spaces&lt;/a&gt; &lt;a&gt;between&lt;/a&gt; &lt;a&gt;links.&lt;/a&gt;  --&gt;\n</code-example>\n<p translation-result=\"on\">请注意 <code>&amp;ngsp;</code> 的序列当 <code>preserveWhitespaces</code> 选项设置为 <code>false</code> 时，它​​们仍然折叠为只有一个空格字符。</p><p translation-origin=\"off\">Note that sequences of <code>&amp;ngsp;</code> are still collapsed to just one space character when\nthe <code>preserveWhitespaces</code> option is set to <code>false</code>.</p>\n\n<code-example language=\"html\">\n&lt;a&gt;before&lt;/a&gt;&amp;ngsp;&amp;ngsp;&amp;ngsp;&lt;a&gt;after&lt;/a&gt;\n&lt;!-- compiled to be equivalent to:\n &lt;a&gt;before&lt;/a&gt; &lt;a&gt;after&lt;/a&gt; --&gt;\n</code-example>\n<p translation-result=\"on\">要保留空白字符序列，请使用 <code>ngPreserveWhitespaces</code> 属性。</p><p translation-origin=\"off\">To preserve sequences of whitespace characters, use the\n<code>ngPreserveWhitespaces</code> attribute.</p>\n\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationEvent\n - api/animations/query\n - api/animations/stagger\n - api/animations/trigger\n - api/common\n - api/common/APP_BASE_HREF\n - api/common/AsyncPipe\n - api/common/CommonModule\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/HashLocationStrategy\n - api/common/I18nPluralPipe\n - api/common/I18nSelectPipe\n - api/common/JsonPipe\n - api/common/KeyValuePipe\n - api/common/Location\n - api/common/LowerCasePipe\n - api/common/NgComponentOutlet\n - api/common/NgIf\n - api/common/NgOptimizedImage\n - api/common/NgTemplateOutlet\n - api/common/PathLocationStrategy\n - api/common/PercentPipe\n - api/common/SlicePipe\n - api/common/TitleCasePipe\n - api/core\n - api/core/AfterContentChecked\n - api/core/AfterContentInit\n - api/core/AfterViewChecked\n - api/core/AfterViewInit\n - api/core/Attribute\n - api/core/ChangeDetectorRef\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/Directive\n - api/core/DoCheck\n - api/core/EventEmitter\n - api/core/Host\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/Input\n - api/core/IterableDiffers\n - api/core/KeyValueDiffers\n - api/core/NgZone\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/QueryList\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/ViewEncapsulation\n - api/core/createComponent\n - api/core/forwardRef\n - api/core/inject\n - api/core/reflectComponentType\n - api/core/testing/TestBed\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/NgModelGroup\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/platform-browser/bootstrapApplication\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/CanDeactivateFn\n - api/router/Resolve\n - api/router/ResolveFn\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/UrlCreationOptions\n - api/router/UrlSegment\n - api/router/UrlTree\n - api/router/testing/RouterTestingHarness\n - api/upgrade/UpgradeAdapter\n - api/upgrade/static/downgradeComponent\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - errors/NG0203\n - errors/NG0300\n - errors/NG0500\n - errors/NG0503\n - errors/NG0504\n - errors/NG0506\n - errors/NG0912\n - errors/NG1001\n - errors/NG2009\n - errors/NG3003\n - errors/NG6100\n - extended-diagnostics/NG8102\n - extended-diagnostics/NG8103\n - extended-diagnostics/NG8105\n - extended-diagnostics/NG8107\n - guide/accessibility\n - guide/add-an-animation\n - guide/ajs-quick-reference\n - guide/angular-compiler-options\n - guide/animations\n - guide/animations-attach-to-html-template\n - guide/aot-compiler\n - guide/aot-metadata-errors\n - guide/architecture\n - guide/architecture-components\n - guide/architecture-modules\n - guide/architecture-services\n - guide/binding-overview\n - guide/build\n - guide/change-detection-skipping-subtrees\n - guide/change-detection-zone-pollution\n - guide/cheatsheet\n - guide/class-binding\n - guide/complex-animation-sequences\n - guide/component-interaction\n - guide/component-overview\n - guide/component-styles\n - guide/content-projection\n - guide/dependency-injection\n - guide/dependency-injection-in-action\n - guide/dependency-injection-navtree\n - guide/deprecations\n - guide/directive-composition-api\n - guide/docs-style-guide\n - guide/dynamic-component-loader\n - guide/dynamic-form\n - guide/elements\n - guide/forms\n - guide/forms-overview\n - guide/glossary\n - guide/hierarchical-dependency-injection\n - guide/hydration\n - guide/i18n-example\n - guide/inputs-outputs\n - guide/lazy-loading-ngmodules\n - guide/lifecycle-hooks\n - guide/lightweight-injection-tokens\n - guide/migration-injectable\n - guide/migration-undecorated-classes\n - guide/ngmodule-faq\n - guide/npm-packages\n - guide/observables-in-angular\n - guide/pipe-template\n - guide/pipes\n - guide/pipes-custom-data-trans\n - guide/providers\n - guide/reactive-forms\n - guide/reusable-animations\n - guide/route-animations\n - guide/router\n - guide/router-tutorial-toh\n - guide/rx-library\n - guide/rxjs-interop\n - guide/signals\n - guide/standalone-components\n - guide/standalone-migration\n - guide/structural-directives\n - guide/styleguide\n - guide/svg-in-templates\n - guide/template-typecheck\n - guide/testing-attribute-directives\n - guide/testing-components-basics\n - guide/testing-components-scenarios\n - guide/testing-utility-apis\n - guide/transition-and-triggers\n - guide/understanding-template-expr-overview\n - guide/upgrade\n - guide/upgrade-setup\n - guide/user-input\n - guide/view-encapsulation\n - guide/what-is-angular\n - guide/zone\n - start\n - start/start-data\n - start/start-forms\n - start/start-routing\n - tutorial/first-app/first-app-lesson-01\n - tutorial/first-app/first-app-lesson-02\n - tutorial/first-app/first-app-lesson-03\n - tutorial/first-app/first-app-lesson-04\n - tutorial/first-app/first-app-lesson-05\n - tutorial/first-app/first-app-lesson-06\n - tutorial/first-app/first-app-lesson-07\n - tutorial/first-app/first-app-lesson-08\n - tutorial/first-app/first-app-lesson-09\n - tutorial/first-app/first-app-lesson-10\n - tutorial/first-app/first-app-lesson-11\n - tutorial/tour-of-heroes/toh-pt0\n - tutorial/tour-of-heroes/toh-pt1\n - tutorial/tour-of-heroes/toh-pt2\n - tutorial/tour-of-heroes/toh-pt3\n - tutorial/tour-of-heroes/toh-pt4\n - tutorial/tour-of-heroes/toh-pt5\n - tutorial/tour-of-heroes/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - /guide/animations\n - api/animations/state\n - api/animations/transition\n - api/animations/trigger\n - api/core\n - api/core/ChangeDetectionStrategy\n - api/core/CompilerOptions\n - api/core/Component#animations\n - api/core/Component#changeDetection\n - api/core/Component#changedetection\n - api/core/Component#component\n - api/core/Component#description\n - api/core/Component#encapsulation\n - api/core/Component#imports\n - api/core/Component#injecting-a-class-with-a-view-provider\n - api/core/Component#interpolation\n - api/core/Component#moduleId\n - api/core/Component#moduleid\n - api/core/Component#options\n - api/core/Component#preserveWhitespaces\n - api/core/Component#preservewhitespaces\n - api/core/Component#preserving-whitespace\n - api/core/Component#schemas\n - api/core/Component#setting-component-inputs\n - api/core/Component#setting-component-outputs\n - api/core/Component#signals\n - api/core/Component#standalone\n - api/core/Component#styleUrls\n - api/core/Component#styles\n - api/core/Component#styleurls\n - api/core/Component#template\n - api/core/Component#templateUrl\n - api/core/Component#templateurl\n - api/core/Component#usage-notes\n - api/core/Component#viewProviders\n - api/core/Component#viewproviders\n - api/core/Component#使用视图提供者注入一个类\n - api/core/Component#保留空格\n - api/core/Component#继承自-directive-装饰器\n - api/core/Component#设置组件的输入属性\n - api/core/Component#设置组件的输出属性\n - api/core/Directive\n - api/core/Directive#exportAs\n - api/core/Directive#host\n - api/core/Directive#hostDirectives\n - api/core/Directive#inputs\n - api/core/Directive#jit\n - api/core/Directive#outputs\n - api/core/Directive#providers\n - api/core/Directive#queries\n - api/core/Directive#selector\n - api/core/Directive#signals\n - api/core/Directive#standalone\n - api/core/EventEmitter\n - api/core/NgModule\n - api/core/Provider\n - api/core/SchemaMetadata\n - api/core/Type\n - api/core/ViewEncapsulation\n - api/core/ViewEncapsulation#Emulated\n - api/core/ViewEncapsulation#None\n - api/core/ViewEncapsulation#ShadowDom\n - api/forms/DefaultValueAccessor\n - guide/glossary#di-token\n - guide/glossary#injector\n - guide/glossary#provider\n - guide/lifecycle-hooks\n - guide/standalone-components\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L725-L745\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L746-L754\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L755-L771\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L772-L780\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L781-L789\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L790-L798\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L799-L807\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L808-L817\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L818-L850\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L851-L858\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L859-L869\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L870-L884\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L885-L893\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L894-L913\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L914-L932\n - https://github.com/ng-docs/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L944-L945\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L725-L745\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L746-L754\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L755-L771\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L772-L780\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L781-L789\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L790-L798\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L799-L807\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L808-L817\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L818-L850\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L851-L858\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L859-L869\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L870-L884\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L885-L893\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L894-L913\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L914-L932\n - https://github.com/ng-docs/angular-cn/tree/16.1.0-next.3/packages/core/src/metadata/directives.ts#L944-L945\n-->"}